/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.26
 * Generated at: 2018-07-06 06:02:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.lang.*;
import java.io.*;
import java.util.*;
import bxm.service.endpoint.http.HttpServiceEndpointContextListener;
import bxm.container.ApplicationContainer;

public final class LoaderStatus_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("java.lang");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("bxm.container.ApplicationContainer");
    _jspx_imports_classes.add("bxm.service.endpoint.http.HttpServiceEndpointContextListener");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>Framework Instance Application ClassLoader Status</title>\n");
      out.write("\n");

	out.println(new Date(System.currentTimeMillis()));
	System.gc();
	ApplicationContainer container = (ApplicationContainer) application
			.getAttribute(HttpServiceEndpointContextListener.FRAMEWORK_INSTANCE);
	StringBuffer sb = container.dumpClassLoaderStatus();

	BufferedReader reader = new BufferedReader(new StringReader(
			sb.toString()));
	String line = null;
	boolean startFlag = false;
	Map<String, List<Map<String, String>>> appMap = new HashMap<String, List<Map<String, String>>>();
	Map<String, String> app = null;
	while ((line = reader.readLine()) != null) {
		if (!startFlag && line.startsWith("bxm")) {
			app = new HashMap<String, String>();
			app.put("loader", line);
			startFlag = true;
		} else if (startFlag) {
			if (line.startsWith("----")) {
				String appName = app.get("application");
				List<Map<String, String>> appList = appMap.get(appName);
				if (appList == null) {
					appList = new ArrayList<Map<String, String>>();
					appMap.put(appName, appList);
				}
				appList.add(app);
				startFlag = false;
			} else {
				String[] lineArr = line.split(":");
				String key = lineArr[0].trim();
				String value = lineArr[1].trim();
				app.put(key, value);
			}
		}
		out.println(line + "<BR>");
	}

	out.println("====================================================================<BR>");
	Set<String> keySet = appMap.keySet();
	for (String key : keySet) {
		out.println("<table border=1><tr><td>");
		List<Map<String,String>> appList = appMap.get(key);
		out.println(key+"</td><td>"+appList.size()+"</td></tr>");
		for(Map<String,String> entry : appList){
			out.println("<tr><td>Loader</td><td> "+entry.get("loader")+"</td></tr>");
			out.println("<tr><td>uuid</td><td> "+entry.get("uuid")+"</td></tr>");
			out.println("<tr><td>status</td><td> "+entry.get("status")+"</td></tr>");
			out.println("<tr><td>createdTime</td><td> "+entry.get("createdTime")+"</td></tr>");
		}
		out.println("</table><br>");
	}

      out.write("\n");
      out.write("\n");
      out.write("</html>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
