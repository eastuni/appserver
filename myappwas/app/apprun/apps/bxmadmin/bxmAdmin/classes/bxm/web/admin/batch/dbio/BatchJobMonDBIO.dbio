<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bxm.web.admin.batch.dbio.BatchJobMonDBIO">
<!--Generated Thu Nov 30 11:20:53 KST 2017-->
<select id="selectStepInfo" parameterType="bxm.web.admin.batch.domain.BatchStepOMM" resultType="bxm.web.admin.batch.domain.BatchStepOMM">
SELECT /* 배치작업 스텝 실행정보 */ 
       STEP_EXECUTION_ID AS stepExecutionId,/*배치스텝 아이디*/ 
       VERSION AS version,/*배치스텝 실행버전*/ 
       STEP_NAME AS stepName,/*배치스텝 이름*/ 
       JOB_EXECUTION_ID AS jobExecutionId,/*배치작업 아이디*/ 
       START_TIME AS startTime,/*배치스텝 시작시각*/ 
       END_TIME AS endTime,/*배치스텝 종료시각*/ 
       STATUS AS status,/*배치스텝 상태*/ 
       COMMIT_COUNT AS commitCount,/*배치스텝 커밋카운트*/ 
       READ_COUNT AS readCount,/*배치스텝 READ 카운트*/ 
       FILTER_COUNT AS filterCount,/*배치스텝 FILTER 카운트*/ 
       WRITE_COUNT AS writeCount,/*배치스텝 WRITE 카운트*/ 
       READ_SKIP_COUNT AS readSkipCount,/*배치스텝 READSKIP 카운트*/ 
       WRITE_SKIP_COUNT AS writeSkipCount,/*배치스텝 WRITESKIP 카운트*/ 
       PROCESS_SKIP_COUNT AS processSkipCount,/*배치스텝 PROCESSSKIP 카운트*/ 
       ROLLBACK_COUNT AS rollbackCount,/*배치스텝 ROLLBACK 카운트*/ 
       EXIT_CODE AS exitCode,/*배치스텝 종료 구분 = 종료 코드*/ 
       EXIT_MESSAGE AS exitMessage,/*배치스텝 종료 메시지 = 에러 메시지*/ 
       LAST_UPDATED AS lastUpdated /*배치스텝 상태 업테이트 시각*/
  FROM F_BATCH_STEP_EXECUTION
 WHERE STEP_EXECUTION_ID = #{stepExecutionId}
 	and DOMAIN_ID = #{domainId}
</select>
<select id="selectJobMonList" resultType="bxm.web.admin.batch.domain.BatchJobMonOMM">
SELECT * FROM 
    ( SELECT ROWNUM AS ROW__NUM, A.* FROM 
        (

/* #### Original SQL [[ ################# */
SELECT /* 배치작업 실행정보 */ 
       b.JOB_EXECUTION_ID AS jobExecutionId,/*배치작업 실행 ID*/
       c.JOB_ID AS jobId, /*작업ID*/
       c.JOB_NM AS jobNm, /*작업명*/
       d.NODE_NAME AS nodeName,
       b.CREATE_TIME AS createTime,/*배치작업 생성시각*/ 
       b.START_TIME AS startTime,/*배치작업 시작시각*/ 
       b.END_TIME AS endTime,/*배치작업 종료 시각*/ 
       COALESCE((SELECT SUM(CPU_USE_TIME) FROM f_batch_step_execution
       			WHERE JOB_EXECUTION_ID = b.JOB_EXECUTION_ID), 0) AS cpuUseTime,
       b.STATUS AS status,/*배치작업 실행상태*/
       b.SUSPENDED AS suspended, /*일시정지 상태*/
       b.EXIT_CODE AS exitCode,/*배치작업 종료 구분*/
       COALESCE((SELECT COUNT(*) FROM f_batch_step_execution
	             WHERE JOB_EXECUTION_ID = b.JOB_EXECUTION_ID), 0) AS stepCount /*step 개수*/     
  FROM f_batch_job_instance a
  INNER JOIN f_batch_job_execution b
  ON a.JOB_INSTANCE_ID = b.JOB_INSTANCE_ID and a.domain_id = b.domain_id
  INNER JOIN bxm_job_info c
  ON a.JOB_NAME = c.JOB_ID and a.domain_id = c.domain_id
  INNER JOIN f_batch_job_execution_ext d
  ON b.JOB_EXECUTION_ID = d.JOB_EXECUTION_ID and b.domain_id = d.domain_id
  WHERE b.START_TIME IS NOT NULL
  AND b.START_TIME between #{batch.fromStartTime} and #{batch.toStartTime}
  AND b.DOMAIN_ID = #{batch.domainId}
	<if test="batch.jobId != null and batch.jobId != ''">
		and c.JOB_ID = #{batch.jobId}
	</if>
	<if test="batch.status != null and batch.status != ''">
		and b.STATUS = #{batch.status}
	</if>
ORDER BY b.START_TIME DESC
/* #### Original SQL ]] ################# */

        ) A 
    WHERE ROWNUM &lt;= ((#{pageNum}*#{pageCount})+1) 
    ) 
WHERE ROW__NUM &gt; (#{pageNum}-1)*#{pageCount}
</select>
<select databaseId="mysql" id="selectJobMonList" resultType="bxm.web.admin.batch.domain.BatchJobMonOMM">
SELECT /* 배치작업 실행정보 */ 
       b.JOB_EXECUTION_ID AS jobExecutionId,/*배치작업 실행 ID*/
       c.JOB_ID AS jobId, /*작업ID*/
       c.JOB_NM AS jobNm, /*작업명*/
       d.NODE_NAME AS nodeName,
       b.CREATE_TIME AS createTime,/*배치작업 생성시각*/ 
       b.START_TIME AS startTime,/*배치작업 시작시각*/ 
       b.END_TIME AS endTime,/*배치작업 종료 시각*/ 
       COALESCE((SELECT SUM(CPU_USE_TIME) FROM F_BATCH_STEP_EXECUTION
       			WHERE JOB_EXECUTION_ID = b.JOB_EXECUTION_ID), 0) AS cpuUseTime,
       b.STATUS AS status,/*배치작업 실행상태*/
       b.SUSPENDED AS suspended, /*일시정지 상태*/
       b.EXIT_CODE AS exitCode,/*배치작업 종료 구분*/
       COALESCE((SELECT COUNT(*) FROM F_BATCH_STEP_EXECUTION
	             WHERE JOB_EXECUTION_ID = b.JOB_EXECUTION_ID), 0) AS stepCount /*step 개수*/     
  FROM F_BATCH_JOB_INSTANCE a
  INNER JOIN F_BATCH_JOB_EXECUTION b
  ON a.JOB_INSTANCE_ID = b.JOB_INSTANCE_ID and a.DOMAIN_ID = b.DOMAIN_ID
  INNER JOIN BXM_JOB_INFO c
  ON a.JOB_NAME = c.JOB_ID and a.DOMAIN_ID = c.DOMAIN_ID
  INNER JOIN F_BATCH_JOB_EXECUTION_EXT d
  ON b.JOB_EXECUTION_ID = d.JOB_EXECUTION_ID and b.DOMAIN_ID = d.DOMAIN_ID
  WHERE b.START_TIME IS NOT NULL
  AND b.START_TIME between #{batch.fromStartTime} and #{batch.toStartTime}
  AND b.DOMAIN_ID = #{batch.domainId}
	<if test="batch.jobId != null and batch.jobId != ''">
		and c.JOB_ID = #{batch.jobId}
	</if>
	<if test="batch.status != null and batch.status != ''">
		and b.STATUS = #{batch.status}
	</if>
ORDER BY b.START_TIME DESC
LIMIT #{pageNum}, #{pageCount}
</select>
<select id="selectJobMonInfo" parameterType="bxm.web.admin.batch.domain.BatchJobMonOMM" resultType="bxm.web.admin.batch.domain.BatchJobMonOMM">
select
  A.JOB_EXECUTION_ID as jobExecutionId
 , A.FRM_INSTANCE_ID as frmInstanceId
 , B.JOB_INSTANCE_ID as jobInstanceId
 , C.JOB_ID as jobId
 , C.JOB_NM as jobNm
 , C.DUP_EXEC_USE_YN as dupExecUseYn
 , A.STATUS as status
 , A.SUSPENDED as suspended
 , A.EXIT_CODE as exitCode
 , A.CREATE_TIME as createTime
 , A.START_TIME as startTime
 , A.END_TIME as endTime
 , D.JOB_TYPE_CD as jobTypeCd
 , D.NODE_NAME as nodeName
 , E.STEP_EXECUTION_ID as stepExecutionId
 , E.STEP_NAME as stepName
 , E.START_TIME as stepStartTime
 , E.END_TIME as stepEndTime
 , E.STATUS as stepStatus
 , E.COMMIT_COUNT as commitCount
 , E.READ_COUNT as readCount
 , E.WRITE_COUNT as writeCount
 , E.CPU_USE_TIME AS cpuUseTime
 from F_BATCH_JOB_EXECUTION A
 INNER JOIN F_BATCH_JOB_INSTANCE B
 ON A.JOB_INSTANCE_ID = B.JOB_INSTANCE_ID and A.DOMAIN_ID = B.DOMAIN_ID
 INNER JOIN BXM_JOB_INFO C
 ON B.JOB_NAME = C.JOB_ID and B.DOMAIN_ID = C.DOMAIN_ID
 LEFT OUTER JOIN F_BATCH_JOB_EXECUTION_EXT D
 ON A.JOB_EXECUTION_ID = D.JOB_EXECUTION_ID and A.DOMAIN_ID = D.DOMAIN_ID
 LEFT OUTER JOIN F_BATCH_STEP_EXECUTION E
 ON A.JOB_EXECUTION_ID = E.JOB_EXECUTION_ID and A.DOMAIN_ID = E.DOMAIN_ID
 WHERE A.JOB_EXECUTION_ID = #{jobExecutionId} and A.DOMAIN_ID = #{domainId}
</select>
<select id="selectStepList" parameterType="bxm.web.admin.batch.domain.BatchJobMonOMM" resultType="bxm.web.admin.batch.domain.BatchStepOMM">
SELECT /* 배치작업 스텝 실행정보 */ 
       a.STEP_EXECUTION_ID AS stepExecutionId,/*배치스텝 아이디*/ 
       a.STEP_NAME AS stepName,/*배치스텝 이름*/ 
       a.JOB_EXECUTION_ID AS jobExecutionId,/*배치작업 아이디*/ 
       a.STATUS AS status,/*배치스텝 상태*/ 
       a.COMMIT_COUNT AS commitCount,/*배치스텝 커밋카운트*/ 
       a.READ_COUNT AS readCount,/*배치스텝 READ 카운트*/ 
       a.WRITE_COUNT AS writeCount,/*배치스텝 WRITE 카운트*/ 
       a.EXIT_CODE AS exitCode/*배치스텝 종료 구분*/ 
  FROM f_batch_step_execution a
  LEFT OUTER JOIN f_batch_job_execution b
  ON a.JOB_EXECUTION_ID = b.JOB_EXECUTION_ID
  LEFT OUTER JOIN f_batch_job_instance c
  ON c.JOB_INSTANCE_ID = b.JOB_INSTANCE_ID
  WHERE c.JOB_NAME = #{jobId} AND a.JOB_EXECUTION_ID = #{jobExecutionId}
</select>
<select id="selectExecParamList" parameterType="bxm.web.admin.batch.domain.BatchJobMonOMM" resultType="bxm.web.admin.batch.domain.BatchJobMonParamOMM">
SELECT /* 배치작업 실행 파라미터 */ 
       a.KEY_NAME AS keyName,/*실행파라미터 KEY*/ 
       a.STRING_VAL AS stringVal/*실행파라미터 String 값*/ 
  FROM F_BATCH_JOB_PARAMS a
  INNER JOIN F_BATCH_JOB_EXECUTION b
  ON a.JOB_INSTANCE_ID = b.JOB_INSTANCE_ID and a.DOMAIN_ID = b.DOMAIN_ID
  WHERE b.JOB_EXECUTION_ID = #{jobExecutionId}
  	and b.DOMAIN_ID = #{domainId}
</select>
<select id="refreshStepInfo" parameterType="bxm.web.admin.batch.domain.BatchStepOMM" resultType="bxm.web.admin.batch.domain.BatchStepOMM">
SELECT /* 배치작업 스텝 실행정보 */ 
		START_TIME AS startTime,
       END_TIME AS endTime,/*배치스텝 종료시각*/ 
       STATUS AS status,/*배치스텝 상태*/        
       COMMIT_COUNT AS commitCount,/*배치스텝 커밋카운트*/ 
       READ_COUNT AS readCount,/*배치스텝 READ 카운트*/ 
       WRITE_COUNT AS writeCount,/*배치스텝 WRITE 카운트*/ 
       EXIT_CODE AS exitCode/*배치스텝 종료 구분*/ 
  FROM F_BATCH_STEP_EXECUTION
 WHERE STEP_EXECUTION_ID = #{stepExecutionId}
 and DOMAIN_ID = #{domainId}
</select>
<select id="selectFParamsList" resultType="bxm.web.admin.batch.domain.FBatchJobParamsOMM">
SELECT /* 배치작업 실행 파라미터 */ 
       A.JOB_INSTANCE_ID AS jobInstanceId,/*배치작업 인스턴스 아이디*/ 
       A.TYPE_CD AS typeCd,/*실행파라미터 타입코드*/ 
       A.KEY_NAME AS keyName,/*실행파라미터 KEY*/ 
       A.STRING_VAL AS stringVal,/*실행파라미터 String 값*/ 
       A.DATE_VAL AS dateVal,/*실행파라미터 Date 값*/ 
       A.LONG_VAL AS longVal,/*실행파라미터 Long 값*/ 
       A.DOUBLE_VAL AS doubleVal /*실행파라미터 Double 값*/
  FROM F_BATCH_JOB_PARAMS A
  WHERE A.JOB_INSTANCE_ID = #{jobInstanceId}
  and a.DOMAIN_ID = #{domainId}
</select>
<select id="selectBatchLogFile" parameterType="bxm.web.admin.batch.domain.BatchJobMonLogOMM" resultType="bxm.web.admin.batch.domain.BatchJobMonLogOMM">
SELECT /* 배치작업 실행정보 확장 */
	   A.DOMAIN_ID AS domainId,
       A.JOB_EXECUTION_ID AS jobExecutionId,/*배치작업 실행 아이디*/ 
       B.JOB_NM AS jobNm, /*배치작업 명*/
       A.JOB_NAME AS jobId,/*배치작업 ID*/ 
       A.UPDATE_TIME AS updateTime,/*UPDATE 시각*/ 
       A.NODE_NAME AS nodeName,/*노드 명*/ 
       A.LOG_FILE AS logFile /*로그 파일*/
  FROM F_BATCH_JOB_EXECUTION_EXT A
  INNER JOIN BXM_JOB_INFO B
  ON A.JOB_NAME = B.JOB_ID and A.DOMAIN_ID = B.domain_id
 WHERE A.JOB_EXECUTION_ID = #{jobExecutionId}
 	and A.DOMAIN_ID = #{domainId}
</select>
<select id="selectDaemonInstance" resultType="bxm.web.admin.batch.domain.RuntimeInstanceOMM">
SELECT /* BXM런타임인스턴스 */ 
       BXM_INSTANCE_ID AS bxmInstanceId,/*BXM인스턴스ID*/ 
       BXM_INSTANCE_NM AS bxmInstanceNm,/*BXM인스턴스명*/ 
       BXM_INSTANCE_DESC AS bxmInstanceDesc,/*BXM 인스턴스 설명*/ 
       BXM_INSTANCE_PID AS bxmInstancePid,/*BXM 인스턴스 PID*/ 
       MNG_SVC_URL AS mngSvcUrl,/*관리서비스URL*/ 
       MNG_SVC_ENV_PROPS AS mngSvcEnvProps,/*관리서비스환경프로퍼티*/ 
       MNG_OBJ_DOMAIN AS mngObjDomain,/*관리OBJ도메인*/ 
       MNG_OBJ_PROPS AS mngObjProps,/*관리OBJ프로퍼티*/ 
       ENV_PROPS AS envProps,/*환경 프로퍼티*/ 
       AUTO_DEPLOY_YN AS autoDeployYn,/*자동 배포 여부*/ 
       LOADING_MODE_CD AS loadingModeCd /*로딩 모드 코드*/
  FROM BXM_RUNTIME_INSTANCE
 WHERE BXM_INSTANCE_NM = 'bxm-batch-daemon'
 AND BXM_INSTANCE_PID like '%'||#{nodeName, jdbcType=VARCHAR}
 AND DOMAIN_ID = #{domainId}
</select>
<select databaseId="mysql" id="selectDaemonInstance" resultType="bxm.web.admin.batch.domain.RuntimeInstanceOMM">
SELECT /* BXM런타임인스턴스 */ 
       BXM_INSTANCE_ID AS bxmInstanceId,/*BXM인스턴스ID*/ 
       BXM_INSTANCE_NM AS bxmInstanceNm,/*BXM인스턴스명*/ 
       BXM_INSTANCE_DESC AS bxmInstanceDesc,/*BXM 인스턴스 설명*/ 
       BXM_INSTANCE_PID AS bxmInstancePid,/*BXM 인스턴스 PID*/ 
       MNG_SVC_URL AS mngSvcUrl,/*관리서비스URL*/ 
       MNG_SVC_ENV_PROPS AS mngSvcEnvProps,/*관리서비스환경프로퍼티*/ 
       MNG_OBJ_DOMAIN AS mngObjDomain,/*관리OBJ도메인*/ 
       MNG_OBJ_PROPS AS mngObjProps,/*관리OBJ프로퍼티*/ 
       ENV_PROPS AS envProps,/*환경 프로퍼티*/ 
       AUTO_DEPLOY_YN AS autoDeployYn,/*자동 배포 여부*/ 
       LOADING_MODE_CD AS loadingModeCd /*로딩 모드 코드*/
  FROM BXM_RUNTIME_INSTANCE
 WHERE BXM_INSTANCE_NM = 'bxm-batch-daemon'
 AND BXM_INSTANCE_PID like CONCAT('%', #{nodeName})
 AND DOMAIN_ID = #{domainId}
</select>
<select id="countTotalPage" resultType="java.lang.Integer">
SELECT /* 배치작업 실행정보 */ 
     count(1)
  FROM f_batch_job_instance a
  INNER JOIN f_batch_job_execution b
  ON a.JOB_INSTANCE_ID = b.JOB_INSTANCE_ID and a.domain_id = b.domain_id
  INNER JOIN bxm_job_info c
  ON a.JOB_NAME = c.JOB_ID and a.domain_id = c.domain_id
  INNER JOIN f_batch_job_execution_ext d
  ON b.JOB_EXECUTION_ID = d.JOB_EXECUTION_ID and b.domain_id = d.domain_id
  WHERE b.START_TIME IS NOT NULL
  AND b.START_TIME between #{batch.fromStartTime} and #{batch.toStartTime}
  AND b.DOMAIN_ID = #{batch.domainId}
	<if test="batch.jobId != null and batch.jobId != ''">
		and c.JOB_ID = #{batch.jobId}
	</if>
	<if test="batch.status != null and batch.status != ''">
		and b.STATUS = #{batch.status}
	</if>
</select>
<select databaseId="mysql" id="countTotalPage" resultType="java.lang.Integer">
SELECT /* 배치작업 실행정보 */ 
  COUNT(*)
  FROM F_BATCH_JOB_INSTANCE a
  INNER JOIN F_BATCH_JOB_EXECUTION b
  ON a.JOB_INSTANCE_ID = b.JOB_INSTANCE_ID and a.DOMAIN_ID = b.DOMAIN_ID
  INNER JOIN BXM_JOB_INFO c
  ON a.JOB_NAME = c.JOB_ID and a.DOMAIN_ID = c.DOMAIN_ID
  INNER JOIN F_BATCH_JOB_EXECUTION_EXT d
  ON b.JOB_EXECUTION_ID = d.JOB_EXECUTION_ID and b.DOMAIN_ID = d.DOMAIN_ID
  WHERE b.START_TIME IS NOT NULL
  AND b.START_TIME between #{batch.fromStartTime} and #{batch.toStartTime}
  AND b.DOMAIN_ID = #{batch.domainId}
	<if test="batch.jobId != null and batch.jobId != ''">
		and c.JOB_ID = #{batch.jobId}
	</if>
	<if test="batch.status != null and batch.status != ''">
		and b.STATUS = #{batch.status}
	</if>
</select>
<select id="selectAppId" resultType="java.lang.String">
SELECT
       BXM_APP_ID AS bxmAppId
  FROM BXM_JOB_INFO
 WHERE JOB_ID = #{jobId} and DOMAIN_ID = #{domainId}
</select>
<select id="selectNodeNm" resultType="java.lang.String">
SELECT
	NODE_NAME
	FROM F_BATCH_JOB_EXECUTION_EXT
	WHERE JOB_EXECUTION_ID = #{jobExecutionId}
	AND DOMAIN_ID = #{domainId}
</select>
<select id="selectJobUserLog" resultType="bxm.web.admin.batch.domain.BatchJobUserLogOMM">
SELECT * FROM 
    ( SELECT ROWNUM AS ROW__NUM, A.* FROM 
        (

/* #### Original SQL [[ ################# */
SELECT /* BXM 배치 작업 사용자 로그 */ 
       A.JOB_EXECUTION_ID AS jobExecutionId,/*배치작업 실행 아이디*/ 
       A.JOB_ID AS jobId,/*배치작업ID*/ 
       A.STEP_EXECUTION_ID AS stepExecutionId,/*배치스텝 아이디*/ 
       A.STEP_NAME AS stepName,/*배치스텝 이름*/ 
       A.LOG_OCCUR_DTTM AS logOccurDttm,/*로그발생일시*/ 
       A.APP_LOG_CTT AS appLogCtt, /*사용자로그내용*/
       A.LOG_SEQ AS logSeq
  FROM bxm_job_app_log A
  WHERE A.JOB_EXECUTION_ID = #{userLog.jobExecutionId}
  AND A.JOB_ID = #{userLog.jobId}
  AND A.DOMAIN_ID = #{userLog.domainId}
  ORDER BY A.LOG_OCCUR_DTTM ASC
  		, A.LOG_SEQ ASC
/* #### Original SQL ]] ################# */

        ) A
    WHERE ROWNUM &lt;= ((#{pageNum}*#{pageCount})+1) 
    ) 
WHERE ROW__NUM &gt; (#{pageNum}-1)*#{pageCount}
</select>
<select databaseId="mysql" id="selectJobUserLog" resultType="bxm.web.admin.batch.domain.BatchJobUserLogOMM">
SELECT /* BXM 배치 작업 사용자 로그 */ 
       A.JOB_EXECUTION_ID AS jobExecutionId,/*배치작업 실행 아이디*/ 
       A.JOB_ID AS jobId,/*배치작업ID*/ 
       A.STEP_EXECUTION_ID AS stepExecutionId,/*배치스텝 아이디*/ 
       A.STEP_NAME AS stepName,/*배치스텝 이름*/ 
       A.LOG_OCCUR_DTTM AS logOccurDttm,/*로그발생일시*/ 
       A.APP_LOG_CTT AS appLogCtt, /*사용자로그내용*/
       A.LOG_SEQ AS logSeq
  FROM BXM_JOB_APP_LOG A
  WHERE A.JOB_EXECUTION_ID = #{userLog.jobExecutionId}
  AND A.JOB_ID = #{userLog.jobId}
  AND A.DOMAIN_ID = #{userLog.domainId}
  ORDER BY A.LOG_OCCUR_DTTM ASC
  		, A.LOG_SEQ ASC
LIMIT #{pageNum}, #{pageCount}
</select>
<select id="countJobUserLog" parameterType="bxm.web.admin.batch.domain.BatchJobUserLogInOMM" resultType="java.lang.Integer">
SELECT /* BXM 배치 작업 사용자 로그 */ 
      count(*)
  FROM bxm_job_app_log A
  WHERE A.JOB_EXECUTION_ID = #{jobExecutionId}
  AND A.JOB_ID = #{jobId}
  AND A.DOMAIN_ID = #{domainId}
</select>
<select databaseId="mysql" id="countJobUserLog" parameterType="bxm.web.admin.batch.domain.BatchJobUserLogInOMM" resultType="java.lang.Integer">
SELECT /* BXM 배치 작업 사용자 로그 */ 
      count(*)
  FROM BXM_JOB_APP_LOG A
  WHERE A.JOB_EXECUTION_ID = #{jobExecutionId}
  AND A.JOB_ID = #{jobId}
  AND A.DOMAIN_ID = #{domainId}
</select>
<select id="selectExecParamExtList" parameterType="bxm.web.admin.batch.domain.BatchJobMonOMM" resultType="bxm.web.admin.batch.domain.BatchJobMonParamOMM">
SELECT /* 배치작업 실행 파라미터 */ 
       a.KEY_NAME AS keyName,/*실행파라미터 KEY*/ 
       a.STRING_VAL AS stringVal/*실행파라미터 String 값*/ 
  FROM F_BATCH_JOB_PARAMS_EXT a
  INNER JOIN F_BATCH_JOB_EXECUTION b
  ON a.JOB_INSTANCE_ID = b.JOB_INSTANCE_ID and a.DOMAIN_ID = b.DOMAIN_ID
  WHERE b.JOB_EXECUTION_ID = #{jobExecutionId}
  	and b.DOMAIN_ID = #{domainId}
</select>
</mapper>
