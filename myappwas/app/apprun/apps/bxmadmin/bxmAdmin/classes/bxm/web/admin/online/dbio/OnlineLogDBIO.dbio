<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bxm.web.admin.online.dbio.OnlineLogDBIO">
<!--Generated Fri May 04 13:25:27 KST 2018-->
<select id="selectServiceLog" resultType="bxm.web.admin.online.domain.ServiceLogSingleOMM">
SELECT /* BXM서비스로그(01일) */ 
       GUID AS guid,/*GUID*/ 
       LINK_SEQ AS linkSeq,/*연동일련번호*/ 
       NODE_NAME AS nodeName,
       CONTAINER_NM AS containerNm,/*컨테이너명*/ 
       TRX_CD AS trxCd,/*거래코드*/ 
       BXM_APP_ID AS bxmAppId,/*BXM어플리케이션ID*/ 
       SVC_NM AS svcNm,/*서비스명*/ 
       OP_NM AS opNm,/*오퍼레이션명*/ 
       OP_ERR_YN AS opErrYn,/*오퍼레이션에러여부*/ 
       OP_OCCUR_DTTM AS opOccurDttm,/*오퍼레이션발생일시*/ 
       OP_ELAPSED_MILLS AS opElapsedMills,/*오퍼레이션경과밀리초*/ 
       SEND_USER_IP AS sendUserIp, /*송신조작자IP*/
       CPU_PROC_MILLS AS cpuProcMills
  FROM ${tableName}
 WHERE GUID = #{guid} AND LINK_SEQ = #{linkSeq}
</select>
<select id="selectServiceLogList" resultType="bxm.web.admin.online.domain.ServiceLogSimpleOMM">
SELECT
       A.GUID AS guid,/*GUID*/ 
       A.LINK_SEQ AS linkSeq,/*연동일련번호*/ 
       A.TRX_CD AS trxCd,/*거래코드*/ 
       A.BXM_APP_ID AS bxmAppId,/*BXM어플리케이션ID*/ 
       A.SVC_NM AS svcNm,/*서비스명*/ 
       A.OP_NM AS opNm,/*오퍼레이션명*/ 
       A.OP_ERR_YN AS opErrYn,/*오퍼레이션에러여부*/ 
       A.OP_OCCUR_DTTM AS opOccurDttm,/*오퍼레이션발생일시*/ 
       A.NODE_NAME AS nodeName,
       A.CONTAINER_NM AS containerNm,
       A.SEND_USER_IP AS sendUserIp, /*송신조작자IP*/
       A.OP_ELAPSED_MILLS AS opElapsedMills,
       A.CPU_PROC_MILLS AS cpuProcMills
FROM ${serviceLog.tableName} A
WHERE DOMAIN_ID = #{serviceLog.domainId}
	<if test="serviceLog.guid != null and serviceLog.guid != ''">
		and A.GUID = #{serviceLog.guid}
	</if>
	<if test="serviceLog.trxCd != null and serviceLog.trxCd != ''">
		and A.TRX_CD = #{serviceLog.trxCd}
	</if>
	<if test="serviceLog.bxmAppId != null and serviceLog.bxmAppId != ''">
		and A.BXM_APP_ID = #{serviceLog.bxmAppId}
	</if>	
	<if test="serviceLog.svcNm != null and serviceLog.svcNm != ''">
		and A.SVC_NM = #{serviceLog.svcNm}
	</if>	
	<if test="serviceLog.opNm != null and serviceLog.opNm != ''">
		and A.OP_NM = #{serviceLog.opNm}
	</if>	
	<if test="serviceLog.sendUserIp != null and serviceLog.sendUserIp != ''">
		and A.SEND_USER_IP = #{serviceLog.sendUserIp}
	</if>	
	<if test="serviceLog.opOccurDttmStart != null and serviceLog.opOccurDttmStart != ''">
		and A.OP_OCCUR_DTTM between #{serviceLog.opOccurDttmStart} and #{serviceLog.opOccurDttmEnd}
	</if>
	<if test="serviceLog.nodeName != null and serviceLog.nodeName != ''">
		and lower(A.NODE_NAME) like concat(lower(#{serviceLog.nodeName}),'%')
	</if>
	<if test="serviceLog.linkSeq != null and serviceLog.linkSeq != ''">
		and A.LINK_SEQ = #{serviceLog.linkSeq}
	</if>
	ORDER BY A.OP_OCCUR_DTTM desc
	LIMIT #{pageNum}, #{pageCount}
</select>
<select id="selectServiceLogDetailList" resultType="bxm.web.admin.online.domain.ServiceLogDetailOMM">
SELECT
	  @RNUM:=@RNUM+1 as logSeq
	, a.guid
	, a.linkSeq
	, a.logLvNm
	, a.logOccurDttm
	, a.logOccurGap
	, a.logData
FROM 
(
SELECT /* BXM상세로그(01일) */ 
       GUID AS guid,/*GUID*/ 
       LINK_SEQ AS linkSeq,/*연동일련번호*/ 
       LOG_LV_NM AS logLvNm,/*로그레벨명*/ 
       LOG_OCCUR_DTTM AS logOccurDttm,/*로그 발생 일시*/ 
       LOG_OCCUR_GAP AS logOccurGap,/*로그발생간격*/ 
       LOG_DATA AS logData/*로그데이터*/ 
FROM ${svcLog.tableName}
WHERE GUID = #{svcLog.guid}
ORDER BY LOG_OCCUR_DTTM ASC, LOG_OCCUR_GAP ASC
LIMIT #{pageNum}, #{pageCount}
) a, (SELECT @RNUM:=0) b
</select>
<select id="selectImageLog" resultType="bxm.web.admin.online.domain.ImageLogSingleOMM">
SELECT /* BXM이미지로그(01일) */ 
       A.GUID AS guid,/*GUID*/ 
       A.TRX_CD AS trxCd,/*거래코드*/ 
       A.NODE_NAME AS nodeName,/*NODE명*/ 
       A.CONTAINER_NM AS containerNm,/*컨테이너명*/ 
       A.CONTEXT_NM AS contextNm,/*컨텍스트명*/ 
       A.BXM_APP_ID AS bxmAppId,/*BXM어플리케이션ID*/ 
       A.SVC_NM AS svcNm,/*서비스명*/ 
       A.OP_NM AS opNm,/*오퍼레이션명*/ 
       A.LOG_OCCUR_DTTM AS logOccurDttm,/*로그발생일시*/ 
       A.MSG_ENCODING_CD AS msgEncodingCd,/*전문인코딩코드*/ 
       A.MSG_TYPE_CD AS msgTypeCd,/*전문유형코드*/ 
       CASE A.MSG_TYPE_CD WHEN '1' THEN 'FLD'
                        WHEN '2' THEN 'XML'
                        WHEN '3' THEN 'Serialized'
                        WHEN '4' THEN 'BIN'
                        WHEN '5' THEN 'JSON'
                        WHEN '6' THEN 'ETC'
       ELSE MSG_TYPE_CD END AS msgType
FROM ${tableName} A
WHERE A.GUID = #{guid} AND A.MSG_INOUT_CD = 'I'
</select>
<select id="selectImageLogList" resultType="bxm.web.admin.online.domain.ImageLogSimpleOMM">
SELECT /* BXM이미지로그(01일) */ 
       GUID AS guid,/*GUID*/ 
       TRX_CD AS trxCd,/*거래코드*/ 
       NODE_NAME AS nodeName,/*NODE명*/ 
       CONTAINER_NM AS containerNm,/*수신컨테이너명*/ 
       CONTEXT_NM AS contextNm,/*수신컨텍스트명*/ 
       BXM_APP_ID AS bxmAppId,/*BXM어플리케이션ID*/ 
       SVC_NM AS svcNm,/*서비스명*/ 
       OP_NM AS opNm,/*오퍼레이션명*/ 
       LOG_OCCUR_DTTM AS logOccurDttm,/*로그발생일시*/ 
       MSG_ENCODING_CD AS msgEncodingCd,/*전문인코딩코드*/ 
       MSG_TYPE_CD AS msgTypeCd, /*전문유형코드*/ 
       CASE MSG_TYPE_CD WHEN '1' THEN 'FLD'
                        WHEN '2' THEN 'XML'
                        WHEN '3' THEN 'Serialized'
                        WHEN '4' THEN 'BIN'
                        WHEN '5' THEN 'JSON'
                        WHEN '6' THEN 'ETC'
       ELSE MSG_TYPE_CD END AS msgType
  FROM ${imageLog.tableName}
  WHERE MSG_INOUT_CD = #{imageLog.msgInoutCd}
  	and DOMAIN_ID = #{imageLog.domainId}
	<if test="imageLog.guid != null and imageLog.guid != ''">
		and GUID = #{imageLog.guid}
	</if>
	<if test="imageLog.trxCd != null and imageLog.trxCd != ''">
		and TRX_CD = #{imageLog.trxCd}
	</if>
	<if test="imageLog.bxmAppId != null and imageLog.bxmAppId != ''">
		and BXM_APP_ID = #{imageLog.bxmAppId}
	</if>	
	<if test="imageLog.svcNm != null and imageLog.svcNm != ''">
		and SVC_NM = #{imageLog.svcNm}
	</if>	
	<if test="imageLog.opNm != null and imageLog.opNm != ''">
		and OP_NM = #{imageLog.opNm}
	</if>	
	<if test="imageLog.sendUserIp != null and imageLog.sendUserIp != ''">
		and SEND_USER_IP= #{imageLog.sendUserIp}
	</if>	
	<if test="imageLog.logOccurDttmStart != null and imageLog.logOccurDttmStart != ''">
		and LOG_OCCUR_DTTM between #{imageLog.logOccurDttmStart} and #{imageLog.logOccurDttmEnd}
	</if>
	<if test="imageLog.nodeName != null and imageLog.nodeName != ''">
		and lower(NODE_NAME) like concat(lower(#{imageLog.nodeName}),'%')
	</if>
	ORDER BY LOG_OCCUR_DTTM desc
	LIMIT #{pageNum}, #{pageCount}
</select>
<select id="selectErrorLog" resultType="bxm.web.admin.online.domain.ErrorLogSingleOMM">
SELECT /* BXM에러로그(01일) */ 
       GUID AS guid,/*GUID*/ 
       LINK_SEQ AS linkSeq,/*연동일련번호*/ 
       LOG_SEQ AS logSeq,/*로그일련번호*/ 
       TRX_CD AS trxCd,/*거래코드*/ 
       TRX_TYPE_CD AS trxTypeCd,/*거래타입코드*/ 
       SYS_CD AS sysCd,/*시스템코드*/ 
       NODE_NO AS nodeNo,/*NODE번호*/ 
       NODE_NAME AS nodeName,/*NODE명*/ 
       CHL_TYPE_CD AS chlTypeCd,/*채널타입코드*/ 
       SCREEN_ID AS screenId,/*화면ID*/ 
       SEND_USER_IP AS sendUserIp,/*송신조작자IP*/ 
       LOG_OCCUR_DTTM AS logOccurDttm,/*로그발생일시*/ 
       ERR_CD AS errCd,
       SQL_ERR_CD AS sqlErrCd
  FROM ${tableName}
 WHERE GUID = #{guid} AND LINK_SEQ = #{linkSeq}
</select>
<select id="selectErrorLogList" resultType="bxm.web.admin.online.domain.ErrorLogSimpleOMM">
SELECT /* BXM에러로그(01일) */ 
       A.GUID AS guid,/*GUID*/ 
       A.LINK_SEQ AS linkSeq,/*연동일련번호*/ 
       A.TRX_CD AS trxCd,/*거래코드*/ 
       A.SYS_CD AS sysCd,/*시스템코드*/ 
       A.NODE_NAME AS nodeName,/*NODE명*/ 
       A.SEND_USER_IP AS sendUserIp,/*송신조작자IP*/ 
       A.LOG_OCCUR_DTTM AS logOccurDttm,/*로그발생일시*/
       A.ERR_CD AS errCd,
       A.SQL_ERR_CD As sqlErrCd,
       A.BIZ_DT AS bizDt,
       A.CHL_TYPE_CD AS chlTypeCd
	FROM ${errorLog.tableName} A
	WHERE A.DOMAIN_ID = #{errorLog.domainId}
	<if test="errorLog.guid != null and errorLog.guid != ''">
		and A.GUID = #{errorLog.guid}
	</if>
	<if test="errorLog.trxCd != null and errorLog.trxCd != ''">
		and A.TRX_CD = #{errorLog.trxCd}
	</if>
	<if test="errorLog.bxmAppId != null and errorLog.bxmAppId != ''">
		and A.BXM_APP_ID = #{errorLog.bxmAppId}
	</if>	
	<if test="errorLog.svcNm != null and errorLog.svcNm != ''">
		and A.SVC_NM = #{errorLog.svcNm}
	</if>	
	<if test="errorLog.opNm != null and errorLog.opNm != ''">
		and A.OP_NM = #{errorLog.opNm}
	</if>	
	<if test="errorLog.sendUserIp != null and errorLog.sendUserIp != ''">
		and A.SEND_USER_IP = #{errorLog.sendUserIp}
	</if>	
	<if test="errorLog.logOccurDttmStart != null and errorLog.logOccurDttmStart != ''">
		and A.LOG_OCCUR_DTTM between #{errorLog.logOccurDttmStart} and #{errorLog.logOccurDttmEnd}
	</if>
	<if test="errorLog.nodeName != null and errorLog.nodeName != ''">
		and lower(A.NODE_NAME) like concat(lower(#{errorLog.nodeName}),'%')
	</if>
	<if test="errorLog.errCd != null and errorLog.errCd !=''">
		and A.ERR_CD = #{errorLog.errCd}
	</if>
	<if test="errorLog.sqlErrCd != null and errorLog.sqlErrCd !=''">
		and A.SQL_ERR_CD = #{errorLog.sqlErrCd}
	</if>
	ORDER BY A.LOG_OCCUR_DTTM desc
	LIMIT #{pageNum}, #{pageCount}
</select>
<select id="selectTransactionLogList" resultType="bxm.web.admin.online.domain.TransactionLogSimpleOMM">
SELECT /* BXM업무로그(01일) */ 
       A.GUID AS guid,/*GUID*/ 
       A.LINK_SEQ AS linkSeq,/*연동일련번호*/ 
       A.LOG_SEQ AS logSeq,
       A.TRX_CD AS trxCd,/*거래코드*/ 
       A.SYS_CD AS sysCd,/*시스템코드*/ 
       A.NODE_NAME AS nodeName,/*NODE명*/ 
       A.SEND_USER_IP AS sendUserIp,/*송신조작자IP*/ 
       A.LOG_OCCUR_DTTM AS logOccurDttm/*로그발생일시*/
	FROM ${trxLog.tableName} A
	WHERE A.DOMAIN_ID = #{trxLog.domainId}
	<if test="trxLog.guid != null and trxLog.guid != ''">
		and A.GUID = #{trxLog.guid}
	</if>
	<if test="trxLog.trxCd != null and trxLog.trxCd != ''">
		and A.TRX_CD = #{trxLog.trxCd}
	</if>
	<if test="trxLog.bxmAppId != null and trxLog.bxmAppId != ''">
		and A.BXM_APP_ID = #{trxLog.bxmAppId}
	</if>	
	<if test="trxLog.svcNm != null and trxLog.svcNm != ''">
		and A.SVC_NM = #{trxLog.svcNm}
	</if>	
	<if test="trxLog.opNm != null and trxLog.opNm != ''">
		and A.OP_NM = #{trxLog.opNm}
	</if>
	<if test="trxLog.logSeq != null and trxLog.logSeq != ''">
		and A.LOG_SEQ = #{trxLog.logSeq}
	</if>	
	<if test="trxLog.sendUserIp != null and trxLog.sendUserIp != ''">
		and A.SEND_USER_IP =#{trxLog.sendUserIp}
	</if>	
	<if test="trxLog.logOccurDttmStart != null and trxLog.logOccurDttmStart != ''">
		and A.LOG_OCCUR_DTTM between #{trxLog.logOccurDttmStart} and #{trxLog.logOccurDttmEnd}
	</if>
	<if test="trxLog.nodeName != null and trxLog.nodeName != ''">
		and lower(A.NODE_NAME) like CONCAT(lower(#{trxLog.nodeName}),'%')
	</if>
	<if test="trxLog.sysCd != null and trxLog.sysCd != ''">
		and A.SYS_CD = #{trxLog.sysCd}
	</if>	
	<if test="trxLog.openBranchNo != null and trxLog.openBranchNo != ''">
		and A.OPEN_BRANCH_NO = #{trxLog.openBranchNo}
	</if>
	<if test="trxLog.mngBranchNo != null and trxLog.mngBranchNo != ''">
		and A.MNG_BRANCH_NO = #{trxLog.mngBranchNo}
	</if>
	<if test="trxLog.cardNo != null and trxLog.cardNo != ''">
		and A.CARD_NO = #{trxLog.cardNo}
	</if>
	<if test="trxLog.acctNo != null and trxLog.acctNo != ''">
		and A.ACCT_NO = #{trxLog.acctNo}
	</if>
	<if test="trxLog.custId != null and trxLog.custId != ''">
		and A.CUST_ID = #{trxLog.custId}
	</if>
	ORDER BY A.LOG_OCCUR_DTTM desc
	LIMIT #{pageNum}, #{pageCount}
</select>
<select id="countTableRow" parameterType="bxm.web.admin.online.domain.OnlineLogSearchConditionOMM" resultType="java.lang.Integer">
SELECT count(*) FROM ${tableName}
where DOMAIN_ID = #{domainId}
	<if test="guid != null and guid != ''">
		and GUID = #{guid}
	</if>
	<if test="trxCd != null and trxCd != ''">
		and TRX_CD = #{trxCd}
	</if>
	<if test="bxmAppId != null and bxmAppId != ''">
		and BXM_APP_ID = #{bxmAppId}
	</if>	
	<if test="svcNm != null and svcNm != ''">
		and SVC_NM = #{svcNm}
	</if>	
	<if test="opNm != null and opNm != ''">
		and OP_NM = #{opNm}
	</if>	
	<if test="sendUserIp != null and sendUserIp != ''">
		and SEND_USER_IP = #{sendUserIp}
	</if>
	<if test="logSeq != null and logSeq != ''">
		and LOG_SEQ = #{logSeq}
	</if>	
	<if test="opOccurDttmStart != null and opOccurDttmStart != ''">
		and OP_OCCUR_DTTM between #{opOccurDttmStart} and #{opOccurDttmEnd}
	</if>
	<if test="logOccurDttmStart != null and logOccurDttmStart != ''">
		and LOG_OCCUR_DTTM between #{logOccurDttmStart} and #{logOccurDttmEnd}
	</if>
	<if test="msgInoutCd != null and msgInoutCd != ''">
		and MSG_INOUT_CD = #{msgInoutCd}
	</if>
	<if test="sysCd != null and sysCd != ''">
		and SYS_CD = #{sysCd}
	</if>
	<if test="openBranchNo != null and openBranchNo != ''">
		and OPEN_BRANCH_NO = #{openBranchNo}
	</if>
	<if test="mngBranchNo != null and mngBranchNo != ''">
		and MNG_BRANCH_NO = #{mngBranchNo}
	</if>
	<if test="cardNo != null and cardNo != ''">
		and CARD_NO = #{cardNo}
	</if>
	<if test="acctNo != null and acctNo != ''">
		and ACCT_NO = #{acctNo}
	</if>
	<if test="custId != null and custId != ''">
		and CUST_ID = #{custId}
	</if>
	<if test="errCd != null and errCd != ''">
		and ERR_CD = #{errCd}
	</if>
	<if test="sqlErrCd != null and sqlErrCd !=''">
		and SQL_ERR_CD = #{sqlErrCd}
	</if>
	<if test="nodeName != null and nodeName != ''">
		and lower(NODE_NAME) like concat(lower(#{nodeName}),'%')
	</if>
	<if test="linkSeq != null and linkSeq != ''">
		and LINK_SEQ = #{linkSeq}
	</if>
</select>
<select id="selectServiceLogTagList" resultType="bxm.web.admin.online.domain.ServiceLogTagOMM">
SELECT
        c.logSeq
        , c.guid
        , c.linkSeq
        , c.logLvNm
        , c.tagTypeCd
        , c.tagNm
FROM
( SELECT
       @RNUM:=@RNUM+1 as logSeq,
       a.GUID AS guid,/*GUID*/
       a.LINK_SEQ AS linkSeq,/*연동일련번호*/
       a.LOG_LV_NM AS logLvNm,
       a.TAG_TYPE_CD AS tagTypeCd,/*TAG타입코드*/
       a.TAG_NM AS tagNm /*TAG명*/
FROM
( SELECT
       GUID,
       LINK_SEQ,
       LOG_LV_NM,
       LOG_OCCUR_DTTM,
       LOG_OCCUR_GAP,
       TAG_TYPE_CD,
       TAG_NM
FROM ${tableName}
WHERE GUID = #{param.guid}
ORDER BY LOG_OCCUR_DTTM ASC, LOG_OCCUR_GAP ASC) a, (SELECT @RNUM:=0) b
) c

WHERE tagTypeCd IS NOT NULL
    OR logLvNm in ('WARN', 'ERROR')
</select>
<select id="countSvcDetailPages" resultType="java.lang.Integer">
SELECT count(*)
FROM ${tableName}
WHERE GUID = #{guid}
</select>
<select id="selectImageLogDetail" resultType="bxm.web.admin.online.domain.ImageLogOMM">
SELECT /* BXM이미지로그(01일) */ 
       A.GUID AS guid,/*GUID*/ 
       A.TRX_CD AS trxCd,/*거래코드*/ 
       A.NODE_NAME AS nodeName,/*NODE명*/ 
       A.CONTAINER_NM AS containerNm,/*컨테이너명*/ 
       A.CONTEXT_NM AS contextNm,/*컨텍스트명*/ 
       A.BXM_APP_ID AS bxmAppId,/*BXM어플리케이션ID*/ 
       A.SVC_NM AS svcNm,/*서비스명*/ 
       A.OP_NM AS opNm,/*오퍼레이션명*/ 
       A.OMM_FQN AS ommFqn,/*입력FQN*/ 
       A.LOG_OCCUR_DTTM AS logOccurDttm,/*로그발생일시*/ 
       A.MSG_ENCODING_CD AS msgEncodingCd,/*전문인코딩코드*/ 
       A.MSG_TYPE_CD AS msgTypeCd,/*전문유형코드*/ 
       CASE MSG_TYPE_CD WHEN '1' THEN 'FLD'
                        WHEN '2' THEN 'XML'
                        WHEN '3' THEN 'Serialized'
                        WHEN '4' THEN 'BIN'
                        WHEN '5' THEN 'JSON'
                        WHEN '6' THEN 'ETC'
       ELSE MSG_TYPE_CD END AS msgType,
       A.MSG_LEN AS msgLen,/*전문길이*/ 
       A.MSG_DATA AS msgData,/*전문데이터*/ 
       A.DUP_GUID AS dupGuid,/*중복GUID*/ 
       A.ERR_CD AS errCd,/*에러코드*/ 
       A.ERR_MSG_CTT AS errMsgCtt, /*에러메시지내용*/
       A.MSG_INOUT_CD AS msgInoutCd
FROM ${tableName} A
WHERE A.GUID = #{guid} and A.DOMAIN_ID = #{domainId}
</select>
<select id="selectServiceLogExcel" resultType="bxm.web.admin.online.domain.ServiceLogOMM">
SELECT /* BXM서비스로그(01일) */ 
       GUID AS guid,/*GUID*/ 
       LINK_SEQ AS linkSeq,/*연동일련번호*/ 
       NODE_NAME AS nodeName,/*NODE명*/ 
       CONTAINER_NM AS containerNm,/*컨테이너명*/ 
       CONTEXT_NM AS contextNm,/*컨텍스트명*/ 
       TRX_CD AS trxCd,/*거래코드*/ 
       BXM_APP_ID AS bxmAppId,/*BXM어플리케이션ID*/ 
       SVC_NM AS svcNm,/*서비스명*/ 
       OP_NM AS opNm,/*오퍼레이션명*/ 
       OP_ERR_YN AS opErrYn,/*오퍼레이션에러여부*/ 
       OP_OCCUR_DTTM AS opOccurDttm,/*오퍼레이션발생일시*/ 
       OP_ELAPSED_MILLS AS opElapsedMills,/*오퍼레이션경과밀리초*/ 
       DATA_PROC_MILLS AS dataProcMills,/*데이터 처리 밀리초*/ 
       RULE_PROC_MILLS AS ruleProcMills,/*룰 처리 밀리초*/ 
       INF_PROC_MILLS AS infProcMills,/*인터페이스 처리 밀리초*/ 
       BEAN_CREATE_MILLS AS beanCreateMills,/*빈 생성 밀리초*/ 
       SEND_USER_ID AS sendUserId,/*송신조작자ID*/ 
       SEND_USER_IP AS sendUserIp /*송신조작자IP*/
FROM ${tableName}
WHERE DOMAIN_ID = #{domainId}
ORDER BY OP_OCCUR_DTTM DESC
</select>
<select id="selectImageLogExcel" resultType="bxm.web.admin.online.domain.ImageLogOMM">
SELECT /* BXM이미지로그(01일) */ 
       GUID AS guid,/*GUID*/ 
       TRX_CD AS trxCd,/*거래코드*/ 
       NODE_NAME AS nodeName,/*NODE명*/ 
       CONTAINER_NM AS containerNm,/*컨테이너명*/ 
       CONTEXT_NM AS contextNm,/*컨텍스트명*/ 
       BXM_APP_ID AS bxmAppId,/*BXM어플리케이션ID*/ 
       SVC_NM AS svcNm,/*서비스명*/ 
       OP_NM AS opNm,/*오퍼레이션명*/ 
       OMM_FQN AS ommFqn,/*입력FQN*/ 
       LOG_OCCUR_DTTM AS logOccurDttm,/*로그발생일시*/ 
       MSG_ENCODING_CD AS msgEncodingCd,/*전문인코딩코드*/ 
       MSG_TYPE_CD AS msgTypeCd,/*전문유형코드*/ 
       MSG_LEN AS msgLen,/*전문길이*/ 
       MSG_DATA AS msgData,/*전문데이터*/ 
       DUP_GUID AS dupGuid,/*중복GUID*/ 
       ERR_CD AS errCd,/*에러코드*/ 
       ERR_MSG_CTT AS errMsgCtt /*에러메시지내용*/
FROM ${tableName}
WHERE DOMAIN_ID =#{domainId}
ORDER BY LOG_OCCUR_DTTM DESC
</select>
<select id="selectErrorLogExcel" resultType="bxm.web.admin.online.domain.ErrorLogOMM">
SELECT /* BXM에러로그(01일) */ 
       GUID AS guid,/*GUID*/ 
       LINK_SEQ AS linkSeq,/*연동일련번호*/ 
       LOG_SEQ AS logSeq,/*로그일련번호*/ 
       TRX_CD AS trxCd,/*거래코드*/ 
       TRX_TYPE_CD AS trxTypeCd,/*거래타입코드*/ 
       SYS_CD AS sysCd,/*시스템코드*/ 
       NODE_NO AS nodeNo,/*NODE번호*/ 
       NODE_NAME AS nodeName,/*NODE명*/ 
       CHL_TYPE_CD AS chlTypeCd,/*채널타입코드*/ 
       SCREEN_ID AS screenId,/*화면ID*/ 
       CC_ID AS ccId,/*센터컷ID*/ 
       TRX_BRANCH_NO AS trxBranchNo,/*거래지점번호*/ 
       TRX_TERMINAL_NO AS trxTerminalNo,/*거래단말번호*/ 
       SEND_USER_ID AS sendUserId,/*송신조작자ID*/ 
       SEND_USER_IP AS sendUserIp,/*송신조작자IP*/ 
       APPR_TRX_YN AS apprTrxYn,/*승인거래여부*/ 
       APPR_USER_ID AS apprUserId,/*승인조작자ID*/ 
       LANG_CD AS langCd,/*언어코드*/ 
       REQ_MSG_DTTM AS reqMsgDttm,/*요청전문일시*/ 
       RES_MSG_DTTM AS resMsgDttm,/*응답전문일시*/ 
       TRX_DT AS trxDt,/*거래일자*/ 
       BIZ_DT AS bizDt,/*영업일자*/ 
       INITIAL_DT AS initialDt,/*기산일자*/ 
       SYS_DT AS sysDt,/*시스템일자*/ 
       LOG_OCCUR_DTTM AS logOccurDttm,/*로그발생일시*/ 
       TRX_ELAPSED_MILLS AS trxElapsedMills,/*거래경과밀리초*/ 
       CUST_ID AS custId,/*고객ID*/ 
       ACCT_NO AS acctNo,/*계좌번호*/ 
       CARD_NO AS cardNo,/*카드번호*/ 
       MNG_BRANCH_NO AS mngBranchNo,/*관리지점번호*/ 
       OPEN_BRANCH_NO AS openBranchNo,/*개설지점번호*/ 
       TRX_AMT AS trxAmt,/*거래금액*/ 
       ERR_CD AS errCd,/*에러코드*/ 
       ERR_MSG_CTT AS errMsgCtt,/*에러메시지내용*/ 
       ERR_STACKTRACE AS errStacktrace /*에러STACKTRACE*/
  FROM ${tableName}
  where DOMAIN_ID = #{domainId}
ORDER BY LOG_OCCUR_DTTM DESC
</select>
<select id="selectTransactionLogExcel" resultType="bxm.web.admin.online.domain.TransactionLogOMM">
SELECT /* BXM업무로그(01일) */ 
       GUID AS guid,/*GUID*/ 
       LINK_SEQ AS linkSeq,/*연동일련번호*/ 
       LOG_SEQ AS logSeq,/*로그일련번호*/ 
       TRX_CD AS trxCd,/*거래코드*/ 
       TRX_TYPE_CD AS trxTypeCd,/*거래타입코드*/ 
       SYS_CD AS sysCd,/*시스템코드*/ 
       NODE_NO AS nodeNo,/*NODE번호*/ 
       NODE_NAME AS nodeName,/*NODE명*/ 
       CHL_TYPE_CD AS chlTypeCd,/*채널타입코드*/ 
       SCREEN_ID AS screenId,/*화면ID*/ 
       CC_ID AS ccId,/*센터컷ID*/ 
       TRX_BRANCH_NO AS trxBranchNo,/*거래지점번호*/ 
       TRX_TERMINAL_NO AS trxTerminalNo,/*거래단말번호*/ 
       SEND_USER_ID AS sendUserId,/*송신조작자ID*/ 
       SEND_USER_IP AS sendUserIp,/*송신조작자IP*/ 
       APPR_TRX_YN AS apprTrxYn,/*승인거래여부*/ 
       APPR_USER_ID AS apprUserId,/*승인조작자ID*/ 
       LANG_CD AS langCd,/*언어코드*/ 
       REQ_MSG_DTTM AS reqMsgDttm,/*요청전문일시*/ 
       RES_MSG_DTTM AS resMsgDttm,/*응답전문일시*/ 
       TRX_DT AS trxDt,/*거래일자*/ 
       BIZ_DT AS bizDt,/*영업일자*/ 
       INITIAL_DT AS initialDt,/*기산일자*/ 
       SYS_DT AS sysDt,/*시스템일자*/ 
       LOG_OCCUR_DTTM AS logOccurDttm,/*로그발생일시*/ 
       TRX_ELAPSED_MILLS AS trxElapsedMills,/*거래경과밀리초*/ 
       CUST_ID AS custId,/*고객ID*/ 
       ACCT_NO AS acctNo,/*계좌번호*/ 
       CARD_NO AS cardNo,/*카드번호*/ 
       MNG_BRANCH_NO AS mngBranchNo,/*관리지점번호*/ 
       OPEN_BRANCH_NO AS openBranchNo,/*개설지점번호*/ 
       TRX_AMT AS trxAmt /*거래금액*/
  FROM ${tableName}
  WHERE DOMAIN_ID=#{domainId}
ORDER BY LOG_OCCUR_DTTM DESC
</select>
<select id="selectTransactionLogs" resultType="bxm.web.admin.online.domain.TransactionLogOMM">
SELECT /* BXM업무로그(01일) */ 
       GUID AS guid,/*GUID*/ 
       LINK_SEQ AS linkSeq,/*연동일련번호*/ 
       LOG_SEQ AS logSeq,/*로그일련번호*/ 
       TRX_CD AS trxCd,/*거래코드*/ 
       TRX_TYPE_CD AS trxTypeCd,/*거래타입코드*/ 
       SYS_CD AS sysCd,/*시스템코드*/ 
       NODE_NO AS nodeNo,/*NODE번호*/ 
       NODE_NAME AS nodeName,/*NODE명*/ 
       CHL_TYPE_CD AS chlTypeCd,/*채널타입코드*/ 
       SCREEN_ID AS screenId,/*화면ID*/ 
       CC_ID AS ccId,/*센터컷ID*/ 
       TRX_BRANCH_NO AS trxBranchNo,/*거래지점번호*/ 
       TRX_TERMINAL_NO AS trxTerminalNo,/*거래단말번호*/ 
       SEND_USER_ID AS sendUserId,/*송신조작자ID*/ 
       SEND_USER_IP AS sendUserIp,/*송신조작자IP*/ 
       APPR_TRX_YN AS apprTrxYn,/*승인거래여부*/ 
       APPR_USER_ID AS apprUserId,/*승인조작자ID*/ 
       LANG_CD AS langCd,/*언어코드*/ 
       REQ_MSG_DTTM AS reqMsgDttm,/*요청전문일시*/ 
       RES_MSG_DTTM AS resMsgDttm,/*응답전문일시*/ 
       TRX_DT AS trxDt,/*거래일자*/ 
       BIZ_DT AS bizDt,/*영업일자*/ 
       INITIAL_DT AS initialDt,/*기산일자*/ 
       SYS_DT AS sysDt,/*시스템일자*/ 
       LOG_OCCUR_DTTM AS logOccurDttm,/*로그발생일시*/ 
       TRX_ELAPSED_MILLS AS trxElapsedMills,/*거래경과밀리초*/ 
       CUST_ID AS custId,/*고객ID*/ 
       ACCT_NO AS acctNo,/*계좌번호*/ 
       CARD_NO AS cardNo,/*카드번호*/ 
       MNG_BRANCH_NO AS mngBranchNo,/*관리지점번호*/ 
       OPEN_BRANCH_NO AS openBranchNo,/*개설지점번호*/ 
       TRX_AMT AS trxAmt /*거래금액*/
  FROM ${tableName}
 WHERE GUID = #{guid}
 ORDER BY LINK_SEQ ASC
</select>
<select id="selectErrorLogDetail" resultType="bxm.web.admin.online.domain.ErrorLogOMM">
SELECT /* BXM에러로그(01일) */ 
       A.GUID AS guid,/*GUID*/ 
       A.LINK_SEQ AS linkSeq,/*연동일련번호*/ 
       A.LOG_SEQ AS logSeq,/*로그일련번호*/ 
       A.TRX_CD AS trxCd,/*거래코드*/ 
       A.TRX_TYPE_CD AS trxTypeCd,/*거래타입코드*/ 
       A.SYS_CD AS sysCd,/*시스템코드*/ 
       A.NODE_NO AS nodeNo,/*NODE번호*/ 
       A.NODE_NAME AS nodeName,/*NODE명*/ 
       A.CHL_TYPE_CD AS chlTypeCd,/*채널타입코드*/ 
       A.SCREEN_ID AS screenId,/*화면ID*/ 
       A.CC_ID AS ccId,/*센터컷ID*/ 
       A.TRX_BRANCH_NO AS trxBranchNo,/*거래지점번호*/ 
       A.TRX_TERMINAL_NO AS trxTerminalNo,/*거래단말번호*/ 
       A.SEND_USER_ID AS sendUserId,/*송신조작자ID*/ 
       A.SEND_USER_IP AS sendUserIp,/*송신조작자IP*/ 
       A.APPR_TRX_YN AS apprTrxYn,/*승인거래여부*/ 
       A.APPR_USER_ID AS apprUserId,/*승인조작자ID*/ 
       A.LANG_CD AS langCd,/*언어코드*/ 
       A.REQ_MSG_DTTM AS reqMsgDttm,/*요청전문일시*/ 
       A.RES_MSG_DTTM AS resMsgDttm,/*응답전문일시*/ 
       A.TRX_DT AS trxDt,/*거래일자*/ 
       A.BIZ_DT AS bizDt,/*영업일자*/ 
       A.INITIAL_DT AS initialDt,/*기산일자*/ 
       A.SYS_DT AS sysDt,/*시스템일자*/ 
       A.LOG_OCCUR_DTTM AS logOccurDttm,/*로그발생일시*/ 
       A.TRX_ELAPSED_MILLS AS trxElapsedMills,/*거래경과밀리초*/ 
       A.CUST_ID AS custId,/*고객ID*/ 
       A.ACCT_NO AS acctNo,/*계좌번호*/ 
       A.CARD_NO AS cardNo,/*카드번호*/ 
       A.MNG_BRANCH_NO AS mngBranchNo,/*관리지점번호*/ 
       A.OPEN_BRANCH_NO AS openBranchNo,/*개설지점번호*/ 
       A.TRX_AMT AS trxAmt,/*거래금액*/ 
       A.ERR_CD AS errCd,/*에러코드*/ 
       A.ERR_MSG_CTT AS errMsgCtt,/*에러메시지내용*/ 
       A.ERR_STACKTRACE AS errStacktrace, /*에러STACKTRACE*/
       A.BIZ_DT AS bizDt
  FROM ${tableName} A
 WHERE A.GUID = #{guid} AND A.LINK_SEQ =#{linkSeq} AND A.DOMAIN_ID =#{domainId}
</select>
<select id="checkServiceLogDetail" resultType="bxm.web.admin.online.domain.ServiceLogDetailOMM">
SELECT /* BXM상세로그(01일) */ 
       GUID AS guid /*GUID*/,
       LINK_SEQ AS linkSeq /*연동일련번호*/,
       LOG_LV_NM AS logLvNm /*로그레벨명*/,
       LOG_OCCUR_DTTM AS logOccurDttm /*로그 발생 일시*/,
       LOG_OCCUR_GAP AS logOccurGap /*로그발생간격*/,
       LOG_DATA AS logData /*로그데이터*/,
       TAG_TYPE_CD AS tagTypeCd /*TAG타입코드*/,
       TAG_NM AS tagNm /*TAG명*/
FROM ${tableName}
WHERE GUID = #{guid}
LIMIT 1
</select>
<select id="selectErrorLogListNoPaging" resultType="bxm.web.admin.online.domain.ErrorLogSimpleOMM">
select
	errlog.GUID as guid,
	errlog.LINK_SEQ as linkSeq,
	errlog.TRX_CD as trxCd,
	errlog.SYS_CD as sysCd,
	errlog.NODE_NAME as nodeName,
	errlog.SEND_USER_IP as sendUserIp,
	errlog.LOG_OCCUR_DTTM as logOccurDttm,
	errlog.ERR_CD as errCd,
	errlog.SQL_ERR_CD as sqlErrCd,
	errlog.BIZ_DT as bizDt,
	errlog.CHL_TYPE_CD as chlTypeCd
from
(
	select DOMAIN_ID, GUID, LINK_SEQ, TRX_CD, SYS_CD, NODE_NAME, SEND_USER_IP,
	LOG_OCCUR_DTTM, ERR_CD, SQL_ERR_CD, BIZ_DT, CHL_TYPE_CD from ${param.tableName}
	<foreach collection="list" index="index" item="item" separator=" ">
		union all select DOMAIN_ID, GUID, LINK_SEQ, TRX_CD, SYS_CD, NODE_NAME, SEND_USER_IP,
	LOG_OCCUR_DTTM, ERR_CD, SQL_ERR_CD, BIZ_DT, CHL_TYPE_CD from ${item}
	</foreach>
) errlog
where errlog.DOMAIN_ID= #{param.domainId}
	<if test="param.guid != null and param.guid != ''">
		and errlog.GUID = #{param.guid}
	</if>
	<if test="param.trxCd != null and param.trxCd != ''">
		and errlog.TRX_CD = #{param.trxCd}
	</if>
	<if test="param.logOccurDttmStart != null and param.logOccurDttmStart != ''">
		and errlog.LOG_OCCUR_DTTM between #{param.logOccurDttmStart} and #{param.logOccurDttmEnd}
	</if>
	<if test="param.nodeName != null and param.nodeName != ''">
		and lower(errlog.NODE_NAME) like CONCAT(lower(#{param.nodeName}),'%')
	</if>
	<if test="param.errCd != null and param.errCd != ''">
		and errlog.ERR_CD = #{param.errCd}
	</if>
	<if test="param.sqlErrCd != null and param.sqlErrCd != ''">
		and errlog.SQL_ERR_CD = #{param.sqlErrCd}
	</if>
	<if test="param.chlTypeCd != null and param.chlTypeCd != ''">
		and errlog.CHL_TYPE_CD= #{param.chlTypeCd}
	</if>
order by errlog.LOG_OCCUR_DTTM desc
limit #{pageNum}, #{pageCount}
</select>
<select id="countErrorLogListNoPaging" resultType="java.lang.Integer">
select
	count(1)
from 
(
	select DOMAIN_ID, GUID, LINK_SEQ, TRX_CD, SYS_CD, NODE_NAME, SEND_USER_IP,
	LOG_OCCUR_DTTM, ERR_CD, SQL_ERR_CD, BIZ_DT, CHL_TYPE_CD from ${param.tableName}
	<foreach collection="list" index="index" item="item" separator=" ">
		union all select DOMAIN_ID, GUID, LINK_SEQ, TRX_CD, SYS_CD, NODE_NAME, SEND_USER_IP,
	LOG_OCCUR_DTTM, ERR_CD, SQL_ERR_CD, BIZ_DT, CHL_TYPE_CD from ${item}
	</foreach>
) errorlog
where DOMAIN_ID= #{param.domainId}
	<if test="param.guid != null and param.guid != ''">
		and GUID = #{param.guid}
	</if>
	<if test="param.trxCd != null and param.trxCd != ''">
		and TRX_CD = #{param.trxCd}
	</if>
	<if test="param.logOccurDttmStart != null and param.logOccurDttmStart != ''">
		and LOG_OCCUR_DTTM between #{param.logOccurDttmStart} and #{param.logOccurDttmEnd}
	</if>
	<if test="param.nodeName != null and param.nodeName != ''">
		and lower(NODE_NAME) like CONCAT(lower(#{param.nodeName}),'%')
	</if>
	<if test="param.errCd != null and param.errCd != ''">
		and ERR_CD = #{param.errCd}
	</if>
	<if test="param.sqlErrCd != null and param.sqlErrCd != ''">
		and SQL_ERR_CD = #{param.sqlErrCd}
	</if>
	<if test="param.chlTypeCd != null and param.chlTypeCd != ''">
		and CHL_TYPE_CD= #{param.chlTypeCd}
	</if>
</select>
<select id="selectTransactionLog" resultType="bxm.web.admin.online.domain.TransactionLogSingleOMM">
SELECT /* BXM업무로그(01일) */ 
       A.GUID AS guid,/*GUID*/ 
       A.LINK_SEQ AS linkSeq,/*연동일련번호*/ 
       A.LOG_SEQ AS logSeq,/*로그일련번호*/ 
       A.TRX_CD AS trxCd,/*거래코드*/ 
       A.TRX_TYPE_CD AS trxTypeCd,/*거래타입코드*/ 
       A.SYS_CD AS sysCd,/*시스템코드*/ 
       A.NODE_NO AS nodeNo,/*NODE번호*/ 
       A.NODE_NAME AS nodeName,/*NODE명*/ 
       A.CHL_TYPE_CD AS chlTypeCd,/*채널타입코드*/ 
       A.SCREEN_ID AS screenId,/*화면ID*/ 
       A.SEND_USER_IP AS sendUserIp,/*송신조작자IP*/ 
       A.LOG_OCCUR_DTTM AS logOccurDttm/*로그발생일시*/ 
  FROM ${tableName} A
 WHERE A.GUID = #{guid}
   AND A.LINK_SEQ = #{linkSeq}
</select>
<select id="selectTrxLogDetail" resultType="bxm.web.admin.online.domain.TransactionLogOMM">
SELECT /* BXM업무로그(01일) */ 
       A.GUID AS guid,/*GUID*/ 
       A.LINK_SEQ AS linkSeq,/*연동일련번호*/ 
       A.LOG_SEQ AS logSeq,/*로그일련번호*/ 
       A.TRX_CD AS trxCd,/*거래코드*/ 
       A.TRX_TYPE_CD AS trxTypeCd,/*거래타입코드*/ 
       A.SYS_CD AS sysCd,/*시스템코드*/ 
       A.NODE_NO AS nodeNo,/*NODE번호*/ 
       A.NODE_NAME AS nodeName,/*NODE명*/ 
       A.CHL_TYPE_CD AS chlTypeCd,/*채널타입코드*/ 
       A.SCREEN_ID AS screenId,/*화면ID*/ 
       A.CC_ID AS ccId,/*센터컷ID*/ 
       A.TRX_BRANCH_NO AS trxBranchNo,/*거래지점번호*/ 
       A.TRX_TERMINAL_NO AS trxTerminalNo,/*거래단말번호*/ 
       A.SEND_USER_ID AS sendUserId,/*송신조작자ID*/ 
       A.SEND_USER_IP AS sendUserIp,/*송신조작자IP*/ 
       A.APPR_TRX_YN AS apprTrxYn,/*승인거래여부*/ 
       A.APPR_USER_ID AS apprUserId,/*승인조작자ID*/ 
       A.LANG_CD AS langCd,/*언어코드*/ 
       A.REQ_MSG_DTTM AS reqMsgDttm,/*요청전문일시*/ 
       A.RES_MSG_DTTM AS resMsgDttm,/*응답전문일시*/ 
       A.TRX_DT AS trxDt,/*거래일자*/ 
       A.BIZ_DT AS bizDate,/*영업일자*/ 
       A.INITIAL_DT AS initialDt,/*기산일자*/ 
       A.SYS_DT AS sysDt,/*시스템일자*/ 
       A.LOG_OCCUR_DTTM AS logOccurDttm,/*로그발생일시*/ 
       A.TRX_ELAPSED_MILLS AS trxElapsedMills,/*거래경과밀리초*/ 
       A.CUST_ID AS custId,/*고객ID*/ 
       A.ACCT_NO AS acctNo,/*계좌번호*/ 
       A.CARD_NO AS cardNo,/*카드번호*/ 
       A.MNG_BRANCH_NO AS mngBranchNo,/*관리지점번호*/ 
       A.OPEN_BRANCH_NO AS openBranchNo,/*개설지점번호*/ 
       A.TRX_AMT AS trxAmt /*거래금액*/
  FROM ${tableName} A
 WHERE A.GUID = #{guid, jdbcType=VARCHAR}
   AND A.LINK_SEQ = #{linkSeq, jdbcType=NUMERIC}
   AND A.DOMAIN_ID = #{domainId, jdbcType=VARCHAR}
</select>
</mapper>

