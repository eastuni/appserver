<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bxm.web.admin.addition.link.flow.dbio.LinkFlowDBIO">
<!--Generated Tue Aug 29 10:41:12 KST 2017-->
<select id="selectMainFlowList" resultType="bxm.web.admin.addition.link.flow.domain.LinkFlowMainOutOMM">
SELECT * FROM 
    ( SELECT ROWNUM AS ROW__NUM, A.* FROM 
        (

/* #### Original SQL [[ ################# */
SELECT /* BXM 연동 Flow 메인 테이블 */ 
       LINK_MAIN_CD AS linkMainCd /*연동대표코드*/,
       LINK_START_TRX_CD AS linkStartTrxCd /*연동기동 거래코드*/,
       USE_YN AS useYn /*사용 여부*/,
       LINK_OUTPUT_MAPPING_TYPE AS linkOutputMappingType /*연동출력 맵핑여부*/,
       LINK_OUTPUT_CHECK_YN AS linkOutputCheckYn /*연동출력확인여부*/
  FROM BXM_LINK_FLOW_MAIN
  WHERE DOMAIN_ID = #{domainId}
  	<if test="flow.linkMainCd != null and flow.linkMainCd != ''">
		and LINK_MAIN_CD = #{flow.linkMainCd, jdbcType=VARCHAR} 
  	</if>
  	<if test="flow.linkStartTrxCd != null and flow.linkStartTrxCd != ''">
		and LINK_START_TRX_CD = #{flow.linkStartTrxCd, jdbcType=VARCHAR} 
  	</if>
/* #### Original SQL ]] ################# */

        ) A 
    WHERE ROWNUM &lt;= ((#{pageNum}*#{pageCount})+1) 
    ) 
WHERE ROW__NUM &gt; (#{pageNum}-1)*#{pageCount}
</select>
<select id="selectMain2DetailList" resultType="bxm.web.admin.addition.link.flow.domain.LinkFlowDetailOMM">
SELECT /* BXM 연동 Flow 상세 테이블 */ 
         LINK_MAIN_CD AS linkMainCd /*연동대표코드*/,
         LINK_SEQ AS linkSeq /*연동순번*/,
         TRX_CD AS trxCd /*거래코드*/
    FROM bxm_link_flow_detail
   WHERE LINK_MAIN_CD = #{linkMainCd, jdbcType=VARCHAR}
     AND DOMAIN_ID = #{domainId}
ORDER BY LINK_SEQ
</select>
<select id="countTotalPage" resultType="java.lang.Integer">
SELECT
	COUNT(*)
FROM bxm_link_flow_main
WHERE DOMAIN_ID = #{domainId}
  	<if test="flow.linkMainCd != null and flow.linkMainCd != ''">
		and LINK_MAIN_CD = #{flow.linkMainCd} 
  	</if>
  	<if test="flow.linkStartTrxCd != null and flow.linkStartTrxCd != ''">
		and LINK_START_TRX_CD = #{flow.linkStartTrxCd} 
  	</if>
</select>
<insert id="insertMainFlow">
INSERT INTO bxm_link_flow_main /* BXM 연동 Flow 메인 테이블 */
(
	DOMAIN_ID /* 도메인 ID */,
     LINK_MAIN_CD /*연동대표코드*/,
    LINK_START_TRX_CD /*연동기동 거래코드*/,
    USE_YN /*사용 여부*/,
    LINK_OUTPUT_CHECK_YN /*연동출력확인여부*/,
    LINK_OUTPUT_FQN /*연동출력FQN*/,
    LINK_OUTPUT_MAPPING_TYPE
)
VALUES
(
	#{domainId}, /* 도메인 ID */
    #{flowMain.linkMainCd, jdbcType=VARCHAR} /*연동대표코드*/,
    #{flowMain.linkStartTrxCd, jdbcType=VARCHAR} /*연동기동 거래코드*/,
    #{flowMain.useYn, jdbcType=VARCHAR} /*사용 여부*/,
    #{flowMain.linkOutputCheckYn, jdbcType=VARCHAR} /*연동출력확인여부*/,
    #{flowMain.linkOutputFqn, jdbcType=VARCHAR} /*연동출력FQN*/,
    #{flowMain.linkOutputMappingType, jdbcType=VARCHAR}
)
</insert>
<update id="updateMainFlow">
UPDATE bxm_link_flow_main /* BXM 연동 Flow 메인 테이블 */
   SET LINK_START_TRX_CD = #{flowMain.linkStartTrxCd, jdbcType=VARCHAR} /* 연동기동 거래코드 */,
       USE_YN = #{flowMain.useYn, jdbcType=VARCHAR} /* 사용 여부 */,
       LINK_OUTPUT_MAPPING_TYPE = #{flowMain.linkOutputMappingType, jdbcType=VARCHAR} /* 연동출력 맵핑여부 */,
       LINK_OUTPUT_MAPPING_CTT = #{flowMain.linkOutputMappingStr, jdbcType=VARCHAR} /* 연동출력맵핑내용 */,
       LINK_OUTPUT_CHECK_YN = #{flowMain.linkOutputCheckYn, jdbcType=VARCHAR} /* 연동출력확인여부 */,
       LINK_OUTPUT_FQN = #{flowMain.linkOutputFqn, jdbcType=VARCHAR} /* 연동출력FQN */
 WHERE LINK_MAIN_CD = #{flowMain.linkMainCd, jdbcType=VARCHAR}
 	AND DOMAIN_ID = #{domainId}
</update>
<delete id="deleteMainFlow">
DELETE FROM bxm_link_flow_main /* BXM 연동 Flow 메인 테이블 */
      WHERE LINK_MAIN_CD = #{linkMainCd}
      AND DOMAIN_ID = #{domainId}
</delete>
<select id="selectLinkStartTrxCdList" resultType="bxm.web.admin.addition.link.flow.domain.LinkStartTrxCdOMM">
SELECT * FROM 
    ( SELECT ROWNUM AS ROW__NUM, A.* FROM 
        (

/* #### Original SQL [[ ################# */
SELECT
	A.TRX_CD as linkStartTrxCd,
	A.TRX_NM as linkStartTrxNm,
	A.LINK_TRX_TYPE_CD as linkTrxTypeCd,
	A.LINK_CTRL_FQN as linkCtrlFqn,
	MAX(B.LINK_MAIN_CD) as linkMainCd
FROM BXM_TRX_INFO A
LEFT OUTER JOIN BXM_LINK_FLOW_MAIN B
ON A.TRX_CD = B.LINK_START_TRX_CD
	AND A.DOMAIN_ID = B.DOMAIN_ID
WHERE A.LINK_TRX_TYPE_CD IN ('L', 'C')
	AND A.DOMAIN_ID = #{domainId}
	<if test="param.linkStartTrxCd != null and param.linkStartTrxCd != ''">
		and A.TRX_CD like #{param.linkStartTrxCd}||'%'
	</if>
	<if test="param.linkStartTrxNm != null and param.linkStartTrxNm != ''">
		and A.TRX_NM like #{param.linkStartTrxNm}||'%'
	</if>
GROUP BY A.TRX_CD, A.TRX_NM, A.LINK_TRX_TYPE_CD, A.LINK_CTRL_FQN
ORDER BY A.TRX_CD
/* #### Original SQL ]] ################# */

        ) A 
    WHERE ROWNUM &lt;= ((#{pageNum}*#{pageCount})+1) 
    ) 
WHERE ROW__NUM &gt; (#{pageNum}-1)*#{pageCount}
</select>
<select id="countTrxTotalPage" resultType="java.lang.Integer">
SELECT
	COUNT(1)
FROM BXM_TRX_INFO
WHERE LINK_TRX_TYPE_CD IN ('L', 'C')
	AND DOMAIN_ID = #{domainId}
	<if test="param.linkStartTrxCd != null and param.linkStartTrxCd != ''">
		and TRX_CD like #{param.linkStartTrxCd}||'%'
	</if>
	<if test="param.linkStartTrxNm != null and param.linkStartTrxNm != ''">
		and TRX_NM like #{param.linkStartTrxNm}||'%'
	</if>
</select>
<select id="selectMainDetail" resultType="bxm.web.admin.addition.link.flow.domain.MainDetailOutOMM">
SELECT
  A.LINK_MAIN_CD as linkMainCd,
  A.LINK_START_TRX_CD as linkStartTrxCd,
  A.USE_YN as useYn,
  A.LINK_OUTPUT_MAPPING_TYPE as linkOutputMappingType,
  A.LINK_OUTPUT_MAPPING_CTT as linkOutputMappingCtt,
  A.LINK_OUTPUT_CHECK_YN as linkOutputCheckYn,
  A.LINK_OUTPUT_FQN as linkOutputFqn,
  B.TRX_NM as linkStartTrxNm,
  B.LINK_TRX_TYPE_CD as linkTrxTypeCd,
  B.LINK_CTRL_FQN as linkCtrlFqn,
  C.LINK_SEQ as linkSeq,
  C.TRX_CD as trxCd,
  D.TRX_NM as trxNm,
  C.TRAN_PROC_CD as tranProcCd,
  C.START_YN as startYn,
  C.INPUT_CHECK_YN as inputCheckYn,
  C.INPUT_CHECK_CTT as inputCheckCtt,
  C.INPUT_MAPPING_TYPE as inputMappingType,
  C.INPUT_MAPPING_CTT as inputMappingCtt,
  C.OUTPUT_TYPE as outputType,
  C.LINK_BEF_CHECK_YN as linkBefCheckYn,
  C.LINK_AFT_CHECK_YN as linkAftCheckYn,
  C.LINK_CHECK_FQN as linkCheckFqn
FROM BXM_LINK_FLOW_MAIN A
LEFT OUTER JOIN BXM_TRX_INFO B
ON A.LINK_START_TRX_CD = B.TRX_CD 
	AND A.DOMAIN_ID = B.DOMAIN_ID
LEFT OUTER JOIN BXM_LINK_FLOW_DETAIL C
ON A.LINK_MAIN_CD = C.LINK_MAIN_CD
	AND A.DOMAIN_ID = C.DOMAIN_ID
LEFT OUTER JOIN BXM_TRX_INFO D
ON C.TRX_CD = D.TRX_CD
	AND C.DOMAIN_ID = D.DOMAIN_ID
WHERE A.LINK_MAIN_CD = #{linkMainCd, jdbcType=VARCHAR}
	AND A.DOMAIN_ID = #{domainId}
ORDER BY C.LINK_SEQ
</select>
<insert id="insertDetailFlow" parameterType="bxm.web.admin.addition.link.flow.domain.LinkFlowDetailOMM">
INSERT INTO bxm_link_flow_detail /* BXM 연동 Flow 상세 테이블 */
(
	DOMAIN_ID /* 도메인 ID */,
    LINK_MAIN_CD /*연동대표코드*/,
    LINK_SEQ /*연동순번*/,
    TRX_CD /*거래코드*/,
    TRAN_PROC_CD /*TX처리코드*/,
    START_YN /*기동여부*/,
    INPUT_CHECK_YN /*입력확인여부*/,
    INPUT_CHECK_CTT /*입력확인내용*/,
	INPUT_MAPPING_TYPE,
    INPUT_MAPPING_CTT /*입력맵핑내용*/,
    OUTPUT_TYPE /*출력구분*/,
    LINK_BEF_CHECK_YN /*연동전확인여부*/,
    LINK_AFT_CHECK_YN /*연동후확인여부*/,
    LINK_CHECK_FQN /*연동확인FQN*/ 
)
VALUES
(
	#{domainId} /* 도메인 ID*/,
    #{linkMainCd, jdbcType=VARCHAR} /*연동대표코드*/,
    #{linkSeq, jdbcType=NUMERIC} /*연동순번*/,
    #{trxCd, jdbcType=VARCHAR} /*거래코드*/,
    #{tranProcCd, jdbcType=VARCHAR} /*TX처리코드*/,
    #{startYn, jdbcType=VARCHAR} /*기동여부*/,
    #{inputCheckYn, jdbcType=VARCHAR} /*입력확인여부*/,
    #{inputCheckCtt, jdbcType=VARCHAR} /*입력확인내용*/,
	#{inputMappingType, jdbcType=VARCHAR},
    #{inputMappingCtt, jdbcType=VARCHAR} /*입력맵핑내용*/,
    #{outputType, jdbcType=VARCHAR} /*출력구분*/,
    #{linkBefCheckYn, jdbcType=VARCHAR} /*연동전확인여부*/,
    #{linkAftCheckYn, jdbcType=VARCHAR} /*연동후확인여부*/,
    #{linkCheckFqn, jdbcType=VARCHAR} /*연동확인FQN*/ 
)
</insert>
<delete id="deleteDetailFlowByMain">
DELETE FROM bxm_link_flow_detail /* BXM 연동 Flow 상세 테이블 */
      WHERE LINK_MAIN_CD = #{linkMainCd, jdbcType=VARCHAR}
      AND DOMAIN_ID = #{domainId}
</delete>
<delete id="deleteDetailFlows" parameterType="bxm.web.admin.addition.link.flow.domain.LinkFlowDetailInOMM">
DELETE FROM bxm_link_flow_detail /* BXM 연동 Flow 상세 테이블 */
      WHERE LINK_MAIN_CD = #{linkMainCd}
        AND LINK_SEQ = #{linkSeq}
        AND DOMAIN_ID = #{domainId}
</delete>
<update id="updateDetailFlows" parameterType="bxm.web.admin.addition.link.flow.domain.LinkFlowDetailOMM">
UPDATE bxm_link_flow_detail /* BXM 연동 Flow 상세 테이블 */
   SET TRX_CD = #{trxCd, jdbcType=VARCHAR} /* 거래코드 */,
       TRAN_PROC_CD = #{tranProcCd, jdbcType=VARCHAR} /* TX처리코드 */,
       START_YN = #{startYn, jdbcType=VARCHAR} /* 기동여부 */,
       INPUT_CHECK_YN = #{inputCheckYn, jdbcType=VARCHAR} /* 입력확인여부 */,
       INPUT_CHECK_CTT = #{inputCheckCtt, jdbcType=VARCHAR} /* 입력확인내용 */,
       INPUT_MAPPING_TYPE = #{inputMappingType, jdbcType=VARCHAR} /* 입력맵핑여부 */,
       INPUT_MAPPING_CTT = #{inputMappingCtt, jdbcType=VARCHAR} /* 입력맵핑내용 */,
       OUTPUT_TYPE = #{outputType, jdbcType=VARCHAR} /* 출력구분 */,
       LINK_BEF_CHECK_YN = #{linkBefCheckYn, jdbcType=VARCHAR} /* 연동전확인여부 */,
       LINK_AFT_CHECK_YN = #{linkAftCheckYn, jdbcType=VARCHAR} /* 연동후확인여부 */,
       LINK_CHECK_FQN = #{linkCheckFqn, jdbcType=VARCHAR} /* 연동확인FQN */
 WHERE LINK_MAIN_CD = #{linkMainCd, jdbcType=VARCHAR}
   AND LINK_SEQ = #{linkSeq, jdbcType=NUMERIC}
</update>
<update id="mergeDetailFlows" parameterType="bxm.web.admin.addition.link.flow.domain.LinkFlowDetailOMM">
MERGE  INTO bxm_link_flow_detail /*BXM 연동 Flow 상세 테이블*/
            USING dual
ON          ( LINK_MAIN_CD = #{linkMainCd, jdbcType=VARCHAR}
              AND LINK_SEQ = #{linkSeq, jdbcType=NUMERIC} 
              AND DOMAIN_ID = #{domainId})
WHEN MATCHED THEN 
     UPDATE 
        SET TRX_CD = #{trxCd, jdbcType=VARCHAR} /* 거래코드 */,
            TRAN_PROC_CD = #{tranProcCd, jdbcType=VARCHAR} /* TX처리코드 */,
            START_YN = #{startYn, jdbcType=VARCHAR} /* 기동여부 */,
            INPUT_CHECK_YN = #{inputCheckYn, jdbcType=VARCHAR} /* 입력확인여부 */,
            INPUT_CHECK_CTT = #{inputCheckCtt, jdbcType=VARCHAR} /* 입력확인내용 */,
            INPUT_MAPPING_TYPE = #{inputMappingType, jdbcType=VARCHAR} /* 입력맵핑여부 */,
            INPUT_MAPPING_CTT = #{inputMappingStr, jdbcType=VARCHAR} /* 입력맵핑내용 */,
            OUTPUT_TYPE = #{outputType, jdbcType=VARCHAR} /* 출력구분 */,
            LINK_BEF_CHECK_YN = #{linkBefCheckYn, jdbcType=VARCHAR} /* 연동전확인여부 */,
            LINK_AFT_CHECK_YN = #{linkAftCheckYn, jdbcType=VARCHAR} /* 연동후확인여부 */,
            LINK_CHECK_FQN = #{linkCheckFqn, jdbcType=VARCHAR} /* 연동확인FQN */
WHEN NOT MATCHED THEN 
     INSERT
     (
     	DOMAIN_ID, /* 도메인 ID */
          LINK_MAIN_CD /*연동대표코드*/,
         LINK_SEQ /*연동순번*/,
         TRX_CD /*거래코드*/,
         TRAN_PROC_CD /*TX처리코드*/,
         START_YN /*기동여부*/,
         INPUT_CHECK_YN /*입력확인여부*/,
         INPUT_CHECK_CTT /*입력확인내용*/,
         INPUT_MAPPING_TYPE /*입력맵핑여부*/,
         INPUT_MAPPING_CTT /*입력맵핑내용*/,
         OUTPUT_TYPE /*출력구분*/,
         LINK_BEF_CHECK_YN /*연동전확인여부*/,
         LINK_AFT_CHECK_YN /*연동후확인여부*/,
         LINK_CHECK_FQN /*연동확인FQN*/ 
     ) 
     VALUES 
     (
     	#{domainId}, /* 도메인 ID */
         #{linkMainCd, jdbcType=VARCHAR} /*연동대표코드*/,
         #{linkSeq, jdbcType=NUMERIC} /*연동순번*/,
         #{trxCd, jdbcType=VARCHAR} /*거래코드*/,
         #{tranProcCd, jdbcType=VARCHAR} /*TX처리코드*/,
         #{startYn, jdbcType=VARCHAR} /*기동여부*/,
         #{inputCheckYn, jdbcType=VARCHAR} /*입력확인여부*/,
         #{inputCheckCtt, jdbcType=VARCHAR} /*입력확인내용*/,
         #{inputMappingType, jdbcType=VARCHAR} /*입력맵핑여부*/,
         #{inputMappingStr, jdbcType=VARCHAR} /*입력맵핑내용*/,
         #{outputType, jdbcType=VARCHAR} /*출력구분*/,
         #{linkBefCheckYn, jdbcType=VARCHAR} /*연동전확인여부*/,
         #{linkAftCheckYn, jdbcType=VARCHAR} /*연동후확인여부*/,
         #{linkCheckFqn, jdbcType=VARCHAR} /*연동확인FQN*/ 
     )
</update>
<select id="selectLinkDetailTrxCdList" resultType="bxm.web.admin.addition.link.flow.domain.LinkStartTrxCdOMM">
SELECT * FROM 
    ( SELECT ROWNUM AS ROW__NUM, A.* FROM 
        (

/* #### Original SQL [[ ################# */
SELECT
	TRX_CD as linkStartTrxCd,
	TRX_NM as linkStartTrxNm,
	LINK_TRX_TYPE_CD as linkTrxTypeCd,
	LINK_CTRL_FQN as linkCtrlFqn
FROM BXM_TRX_INFO
WHERE DOMAIN_ID = #{domainId}
	<if test="param.linkStartTrxCd != null and param.linkStartTrxCd != ''">
		and TRX_CD like #{param.linkStartTrxCd}||'%'
	</if>
	<if test="param.linkStartTrxNm != null and param.linkStartTrxNm != ''">
		and TRX_NM like #{param.linkStartTrxNm}||'%'
	</if>
	<if test=" param.existingTrxCdList != null and param.existingTrxCdList.size() != 0">
	AND TRX_CD NOT IN
	<foreach close=")" collection="param.existingTrxCdList" index="index" item="item" open="(" separator=",">
		#{item}
	</foreach>
	</if>
ORDER BY TRX_CD
/* #### Original SQL ]] ################# */

        ) A 
    WHERE ROWNUM &lt;= ((#{pageNum}*#{pageCount})+1) 
    ) 
WHERE ROW__NUM &gt; (#{pageNum}-1)*#{pageCount}
</select>
<select id="countDetailTrxTotalPage" resultType="java.lang.Integer">
SELECT
	COUNT(1)
FROM BXM_TRX_INFO
WHERE DOMAIN_ID = #{domainId}
	<if test="param.linkStartTrxCd != null and param.linkStartTrxCd != ''">
		and TRX_CD like #{param.linkStartTrxCd}||'%'
	</if>
	<if test="param.linkStartTrxNm != null and param.linkStartTrxNm != ''">
		and TRX_NM like #{param.linkStartTrxNm}||'%'
	</if>
	<if test=" param.existingTrxCdList != null and param.existingTrxCdList.size() != 0">
	AND TRX_CD NOT IN
	<foreach close=")" collection="param.existingTrxCdList" index="index" item="item" open="(" separator=",">
		#{item}
	</foreach>
	</if>
</select>
<select id="selectRemoveDetailList" resultType="bxm.web.admin.addition.link.flow.domain.LinkFlowDetailInOMM">
SELECT
	DOMAIN_ID AS domainId,
  	LINK_MAIN_CD AS linkMainCd,
  	LINK_SEQ AS linkSeq
FROM BXM_LINK_FLOW_DETAIL
WHERE LINK_MAIN_CD = #{linkMainCd}
	AND DOMAIN_ID = #{domainId}
<if test=" deleteSeqs != null and deleteSeqs.size() != 0">
	AND LINK_SEQ NOT IN
	<foreach close=")" collection="deleteSeqs" index="index" item="item" open="(" separator=",">
		#{item}
	</foreach>
</if>
</select>
</mapper>
