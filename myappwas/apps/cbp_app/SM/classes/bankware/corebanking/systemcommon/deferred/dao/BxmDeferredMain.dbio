<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bankware.corebanking.systemcommon.deferred.dao.BxmDeferredMain">
<!--Generated Thu Nov 10 10:32:41 KST 2016-->
<select id="select" resultType="bankware.corebanking.systemcommon.deferred.dao.dto.BxmDeferredMainIO">
select bdm.deferred_id as deferredId /*후행ID*/
     , bdm.trx_cd as trxCd /*거래코드*/
     , bdm.bxm_app_id as bxmAppId /*BXM어플리케이션ID*/
     , bdm.svc_nm as svcNm /*서비스명*/
     , bdm.op_nm as opNm /*오퍼레이션명*/
     , bdm.deferred_nm as deferredNm /*후행명*/
     , bdm.use_yn as useYn /*사용여부*/
     , bdm.err_stop_yn as errStopYn /*에러중지여부*/
     , bdm.err_skip_yn as errSkipYn /*에러SKIP여부*/
     , bdm.node_exec_yn as nodeExecYn /*노드별실행여부*/
     , bdm.start_type_cd as startTypeCd /*시작유형코드*/
     , bdm.svc_proc_cd as svcProcCd /*서비스처리코드*/
     , bdm.deferred_tran_cd as deferredTranCd /*후행트랜잭션코드*/
     , bdm.exec_interval_sec as execIntervalSec /*실행주기초*/
     , bdm.delay_interval_sec as delayIntervalSec /*지연주기초*/
     , bdm.fetch_cnt as fetchCnt /*FETCH건수*/
     , bdm.parll_exec_cnt as parllExecCnt /*병렬실행수*/
     , bdm.target_table_nm as targetTableNm /*대상테이블명*/
     , bdm.day_table_yn as dayTableYn /*일별테이블여부*/
     , bdm.target_column_nm as targetColumnNm /*대상컬럼명*/
     , bdm.table_reader_bean_nm as tableReaderBeanNm /*테이블리더빈명*/
     , bdm.table_numbering_use_yn as tableNumberingUseYn /*테이블채번사용여부*/
     , bdm.table_numbering_bean_nm as tableNumberingBeanNm /*테이블채번빈명*/
     , bdm.org_cd as orgCd /*기관코드*/
     , bdm.modify_user_id as modifyUserId /*변경사용자ID*/
     , bdm.modify_occur_dttm as modifyOccurDttm /*변경발생일시*/
  FROM bxm_deferred_main bdm
 WHERE bdm.deferred_id = #{deferredId}
<if test="orgCd != null and orgCd != ''">
   AND bdm.org_cd =#{orgCd}
</if>
</select>
<insert id="insert" parameterType="bankware.corebanking.systemcommon.deferred.dao.dto.BxmDeferredMainIO">
insert into 
       bxm_deferred_main
     ( deferred_id /*후행ID*/
     , trx_cd /*거래코드*/
     , bxm_app_id /*bxm어플리케이션ID*/
     , svc_nm /*서비스명*/
     , op_nm /*오퍼레이션명*/
     , deferred_nm /*후행명*/
     , use_yn /*사용여부*/
     , err_stop_yn /*에러중지여부*/
     , err_skip_yn /*에러SKIP여부*/
     , node_exec_yn /*노드별실행여부*/
     , start_type_cd /*시작유형코드*/
     , svc_proc_cd /*서비스처리코드*/
     , deferred_tran_cd /*후행트랜잭션코드*/
     , exec_interval_sec /*실행주기초*/
     , delay_interval_sec /*지연주기초*/
     , fetch_cnt /*FETCH건수*/
     , parll_exec_cnt /*병렬실행수*/
     , target_table_nm /*대상테이블명*/
     , day_table_yn /*일별테이블여부*/
     , target_column_nm /*대상컬럼명*/
     , table_reader_bean_nm /*테이블리더빈명*/
     , table_numbering_use_yn /*테이블채번사용여부*/
     , table_numbering_bean_nm /*테이블채번빈명*/
     , org_cd /*기관코드*/
     , modify_user_id /*변경사용자ID*/
     , modify_occur_dttm /*변경발생일시*/ 
     )
VALUES
     (
       #{deferredId, jdbcType=VARCHAR} /*후행ID*/,
       #{trxCd, jdbcType=VARCHAR} /*거래코드*/,
       #{bxmAppId, jdbcType=VARCHAR} /*BXM어플리케이션ID*/,
       #{svcNm, jdbcType=VARCHAR} /*서비스명*/,
       #{opNm, jdbcType=VARCHAR} /*오퍼레이션명*/,
       #{deferredNm, jdbcType=VARCHAR} /*후행명*/,
       #{useYn, jdbcType=VARCHAR} /*사용여부*/,
       #{errStopYn, jdbcType=VARCHAR} /*에러중지여부*/,
       #{errSkipYn, jdbcType=VARCHAR} /*에러SKIP여부*/,
       #{nodeExecYn, jdbcType=VARCHAR} /*노드별실행여부*/,
       #{startTypeCd, jdbcType=VARCHAR} /*시작유형코드*/,
       #{svcProcCd, jdbcType=VARCHAR} /*서비스처리코드*/,
       #{deferredTranCd, jdbcType=VARCHAR} /*후행트랜잭션코드*/,
       #{execIntervalSec, jdbcType=NUMERIC} /*실행주기초*/,
       #{delayIntervalSec, jdbcType=NUMERIC} /*지연주기초*/,
       #{fetchCnt, jdbcType=NUMERIC} /*FETCH건수*/,
       #{parllExecCnt, jdbcType=NUMERIC} /*병렬실행수*/,
       #{targetTableNm, jdbcType=VARCHAR} /*대상테이블명*/,
       #{dayTableYn, jdbcType=VARCHAR} /*일별테이블여부*/,
       #{targetColumnNm, jdbcType=VARCHAR} /*대상컬럼명*/,
       #{tableReaderBeanNm, jdbcType=VARCHAR} /*테이블리더빈명*/,
       #{tableNumberingUseYn, jdbcType=VARCHAR} /*테이블채번사용여부*/,
       #{tableNumberingBeanNm, jdbcType=VARCHAR} /*테이블채번빈명*/,
       #{orgCd, jdbcType=VARCHAR} /*기관코드*/,
       #{modifyUserId, jdbcType=VARCHAR} /*변경사용자ID*/,
       #{modifyOccurDttm, jdbcType=VARCHAR} /*변경발생일시*/ 
     )
</insert>
<update id="update" parameterType="bankware.corebanking.systemcommon.deferred.dao.dto.BxmDeferredMainIO">
update bxm_deferred_main
   set trx_cd = #{trxCd, jdbcType=VARCHAR} /* 거래코드 */
     , bxm_app_id = #{bxmAppId, jdbcType=VARCHAR} /* BXM어플리케이션ID */
     , svc_nm = #{svcNm, jdbcType=VARCHAR} /* 서비스명 */
     , op_nm = #{opNm, jdbcType=VARCHAR} /* 오퍼레이션명 */
     , deferred_nm = #{deferredNm, jdbcType=VARCHAR} /* 후행명 */
     , use_yn = #{useYn, jdbcType=VARCHAR} /* 사용여부 */
     , err_stop_yn = #{errStopYn, jdbcType=VARCHAR} /* 에러중지여부 */
     , err_skip_yn = #{errSkipYn, jdbcType=VARCHAR} /* 에러SKIP여부 */
     , node_exec_yn = #{nodeExecYn, jdbcType=VARCHAR} /* 노드별실행여부 */
     , start_type_cd = #{startTypeCd, jdbcType=VARCHAR} /* 시작유형코드 */
     , svc_proc_cd = #{svcProcCd, jdbcType=VARCHAR} /* 서비스처리코드 */
     , deferred_tran_cd = #{deferredTranCd, jdbcType=VARCHAR} /* 후행트랜잭션코드 */
     , exec_interval_sec = #{execIntervalSec, jdbcType=NUMERIC} /* 실행주기초 */
     , delay_interval_sec = #{delayIntervalSec, jdbcType=NUMERIC} /* 지연주기초 */
     , fetch_cnt = #{fetchCnt, jdbcType=NUMERIC} /* FETCH건수 */
     , parll_exec_cnt = #{parllExecCnt, jdbcType=NUMERIC} /* 병렬실행수 */
     , target_table_nm = #{targetTableNm, jdbcType=VARCHAR} /* 대상테이블명 */
     , day_table_yn = #{dayTableYn, jdbcType=VARCHAR} /* 일별테이블여부 */
     , target_column_nm = #{targetColumnNm, jdbcType=VARCHAR} /* 대상컬럼명 */
     , table_reader_bean_nm = #{tableReaderBeanNm, jdbcType=VARCHAR} /* 테이블리더빈명 */
     , table_numbering_use_yn = #{tableNumberingUseYn, jdbcType=VARCHAR} /* 테이블채번사용여부 */
     , table_numbering_bean_nm = #{tableNumberingBeanNm, jdbcType=VARCHAR} /* 테이블채번빈명 */
     , org_cd = #{orgCd, jdbcType=VARCHAR} /*기관코드*/
     , modify_user_id = #{modifyUserId, jdbcType=VARCHAR} /* 변경사용자ID */
     , modify_occur_dttm = #{modifyOccurDttm, jdbcType=VARCHAR} /* 변경발생일시 */
 where deferred_id = #{deferredId, jdbcType=VARCHAR}
</update>
<select id="selectListOracle" resultType="bankware.corebanking.systemcommon.deferred.dao.dto.BxmDeferredMainIO">
SELECT * FROM 
    ( SELECT ROWNUM AS ROW__NUM, A.* FROM 
        (

/* #### Original SQL [[ ################# */
select bdm.deferred_id as deferredId /*후행ID*/
     , bdm.trx_cd as trxCd /*거래코드*/
     , bdm.bxm_app_id as bxmAppId /*BXM어플리케이션ID*/
     , bdm.svc_nm as svcNm /*서비스명*/
     , bdm.op_nm as opNm /*오퍼레이션명*/
     , bdm.deferred_nm as deferredNm /*후행명*/
     , bdm.use_yn as useYn /*사용여부*/
     , bdm.err_stop_yn as errStopYn /*에러중지여부*/
     , bdm.err_skip_yn as errSkipYn /*에러SKIP여부*/
     , bdm.node_exec_yn as nodeExecYn /*노드별실행여부*/
     , bdm.start_type_cd as startTypeCd /*시작유형코드*/
     , bdm.svc_proc_cd as svcProcCd /*서비스처리코드*/
     , bdm.deferred_tran_cd as deferredTranCd /*후행트랜잭션코드*/
     , bdm.exec_interval_sec as execIntervalSec /*실행주기초*/
     , bdm.delay_interval_sec as delayIntervalSec /*지연주기초*/
     , bdm.fetch_cnt as fetchCnt /*FETCH건수*/
     , bdm.parll_exec_cnt as parllExecCnt /*병렬실행수*/
     , bdm.target_table_nm as targetTableNm /*대상테이블명*/
     , bdm.day_table_yn as dayTableYn /*일별테이블여부*/
     , bdm.target_column_nm as targetColumnNm /*대상컬럼명*/
     , bdm.table_reader_bean_nm as tableReaderBeanNm /*테이블리더빈명*/
     , bdm.table_numbering_use_yn as tableNumberingUseYn /*테이블채번사용여부*/
     , bdm.table_numbering_bean_nm as tableNumberingBeanNm /*테이블채번빈명*/
     , bdm.org_cd as orgCd /*기관코드*/
     , bdm.modify_user_id as modifyUserId /*변경사용자ID*/
     , bdm.modify_occur_dttm as modifyOccurDttm /*변경발생일시*/
  from bxm_deferred_main bdm
<where>
  <if test="deferredId != null and deferredId != ''">
       upper(bdm.deferred_id) like upper(c#{deferredId, jdbcType=VARCHAR})||'%'
  </if>
  <if test="orgCd != null and orgCd != ''">
       and bdm.org_cd = #{orgCd, jdbcType=VARCHAR}
  </if>
  <if test="deferredId != null and deferredId != ''">
  </if>
</where>
order by bdm.org_cd, bdm.deferred_id
/* #### Original SQL ]] ################# */

        ) A 
    WHERE ROWNUM &lt;= ((#{pageNum}*#{pageCount})+1) 
    ) 
WHERE ROW__NUM &gt; (#{pageNum}-1)*#{pageCount}
</select>
<select id="selectListMysql" resultType="bankware.corebanking.systemcommon.deferred.dao.dto.BxmDeferredMainIO">
select bdm.deferred_id as deferredId /*후행ID*/
     , bdm.trx_cd as trxCd /*거래코드*/
     , bdm.bxm_app_id as bxmAppId /*BXM어플리케이션ID*/
     , bdm.svc_nm as svcNm /*서비스명*/
     , bdm.op_nm as opNm /*오퍼레이션명*/
     , bdm.deferred_nm as deferredNm /*후행명*/
     , bdm.use_yn as useYn /*사용여부*/
     , bdm.err_stop_yn as errStopYn /*에러중지여부*/
     , bdm.err_skip_yn as errSkipYn /*에러SKIP여부*/
     , bdm.node_exec_yn as nodeExecYn /*노드별실행여부*/
     , bdm.start_type_cd as startTypeCd /*시작유형코드*/
     , bdm.svc_proc_cd as svcProcCd /*서비스처리코드*/
     , bdm.deferred_tran_cd as deferredTranCd /*후행트랜잭션코드*/
     , bdm.exec_interval_sec as execIntervalSec /*실행주기초*/
     , bdm.delay_interval_sec as delayIntervalSec /*지연주기초*/
     , bdm.fetch_cnt as fetchCnt /*FETCH건수*/
     , bdm.parll_exec_cnt as parllExecCnt /*병렬실행수*/
     , bdm.target_table_nm as targetTableNm /*대상테이블명*/
     , bdm.day_table_yn as dayTableYn /*일별테이블여부*/
     , bdm.target_column_nm as targetColumnNm /*대상컬럼명*/
     , bdm.table_reader_bean_nm as tableReaderBeanNm /*테이블리더빈명*/
     , bdm.table_numbering_use_yn as tableNumberingUseYn /*테이블채번사용여부*/
     , bdm.table_numbering_bean_nm as tableNumberingBeanNm /*테이블채번빈명*/
     , bdm.org_cd as orgCd /*기관코드*/
     , bdm.modify_user_id as modifyUserId /*변경사용자ID*/
     , bdm.modify_occur_dttm as modifyOccurDttm /*변경발생일시*/
  from bxm_deferred_main bdm
<where>
  <if test="deferredId != null and deferredId != ''">
       upper(bdm.deferred_id) like upper(concat(#{deferredId, jdbcType=VARCHAR},'%'))
  </if>
  <if test="orgCd != null and orgCd != ''">
       and bdm.org_cd = #{orgCd, jdbcType=VARCHAR}
  </if>
</where>
order by bdm.org_cd, bdm.deferred_id
limit #{pageOffset}, #{pageCount}
</select>
<delete id="delete">
delete from 
       bxm_deferred_main
 where deferred_id = #{deferredId}
</delete>
<select id="selectListCount" resultType="java.lang.Integer">
select count(bdm.deferred_id) as totalCount /*전체건수*/
  from bxm_deferred_main bdm
<where>
  <if test="deferredId != null and deferredId != ''">
       upper(bdm.deferred_id) like upper(concat(#{deferredId, jdbcType=VARCHAR},'%'))
  </if>
  <if test="orgCd != null and orgCd != ''">
       and bdm.org_cd = #{orgCd, jdbcType=VARCHAR}
  </if>
</where>
</select>
</mapper>
