<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bankware.corebanking.systemcommon.deferred.dao.BxmDeferredExec">
<!--Generated Thu Nov 10 10:33:52 KST 2016-->
<select id="selectWithDeferredName" resultType="bankware.corebanking.systemcommon.deferred.dao.dto.BxmDeferredExecIO">
select bde.deferred_id as deferredId /*후행ID*/
     , bdm.deferred_nm as deferredNm /*후행명*/
     , bde.biz_dt as bizDt /*영업일자*/
     , bde.node_no as nodeNo /*노드번호*/
     , bde.parll_proc_seq as parllProcSeq /*병렬처리일련번호*/
     , bde.deferred_proc_cd as deferredProcCd /*후행실행처리코드*/
     , bde.deferred_status_cd as deferredStatusCd /*후행실행상태코드*/
     , bde.start_seq as startSeq /*시작일련번호*/
     , bde.end_seq as endSeq /*종료일련번호*/
     , bde.curr_seq as currSeq /*현재일련번호*/
     , bde.err_seq as errSeq /*에러일련번호*/
     , bde.start_dttm as startDttm /*시작일시*/
     , bde.err_cd as errCd /*에러코드*/
     , bde.err_msg_ctt as errMsgCtt /*에러메시지내용*/
  from bxm_deferred_exec bde
 inner join 
       bxm_deferred_main bdm
    on bde.deferred_id = bdm.deferred_id
 where bde.deferred_id = #{deferredId, jdbcType=VARCHAR}
   and bde.biz_dt = #{bizDt, jdbcType=VARCHAR}
   and bde.node_no = #{nodeNo, jdbcType=NUMERIC}
   and bde.parll_proc_seq = #{parllProcSeq, jdbcType=NUMERIC}
   and bde.deferred_proc_cd = #{deferredProcCd, jdbcType=VARCHAR}
</select>
<select id="selectListWithDeferredNameMysql" resultType="bankware.corebanking.systemcommon.deferred.dao.dto.BxmDeferredExecIO">
select bde.deferred_id as deferredId /*후행ID*/
     , bdm.deferred_nm as deferredNm /*후행명*/
     , bde.biz_dt as bizDt /*영업일자*/
     , bde.node_no as nodeNo /*노드번호*/
     , bde.parll_proc_seq as parllProcSeq /*병렬처리일련번호*/
     , bde.deferred_proc_cd as deferredProcCd /*후행실행처리코드*/
     , bde.deferred_status_cd as deferredStatusCd /*후행실행상태코드*/
     , bde.start_seq as startSeq /*시작일련번호*/
     , bde.end_seq as endSeq /*종료일련번호*/
     , bde.curr_seq as currSeq /*현재일련번호*/
     , bde.err_seq as errSeq /*에러일련번호*/
     , bde.start_dttm as startDttm /*시작일시*/
     , bde.err_cd as errCd /*에러코드*/
     , bde.err_msg_ctt as errMsgCtt /*에러메시지내용*/
  from bxm_deferred_exec bde
 inner join 
       bxm_deferred_main bdm
    on bde.deferred_id = bdm.deferred_id
<where>
  <if test="deferredId != null and deferredId != ''">
       upper(bde.deferred_id) like upper(concat(#{deferredId, jdbcType=VARCHAR},'%'))
  </if>
  <if test="nodeNo != null and nodeNo != ''">
       and bde.node_no = #{nodeNo, jdbcType=NUMERIC}
  </if>
</where>
 order by bde.start_dttm desc
 limit #{pageOffset}, #{pageCount}
</select>
<select id="selectListWithDeferredNameOracle" resultType="bankware.corebanking.systemcommon.deferred.dao.dto.BxmDeferredExecIO">
#{deferredI}SELECT * FROM 
    ( SELECT ROWNUM AS ROW__NUM, A.* FROM 
        (

/* #### Original SQL [[ ################# */
select bde.deferred_id as deferredId /*후행ID*/
     , bdm.deferred_nm as deferredNm /*후행명*/
     , bde.biz_dt as bizDt /*영업일자*/
     , bde.node_no as nodeNo /*노드번호*/
     , bde.parll_proc_seq as parllProcSeq /*병렬처리일련번호*/
     , bde.deferred_proc_cd as deferredProcCd /*후행실행처리코드*/
     , bde.deferred_status_cd as deferredStatusCd /*후행실행상태코드*/
     , bde.start_seq as startSeq /*시작일련번호*/
     , bde.end_seq as endSeq /*종료일련번호*/
     , bde.curr_seq as currSeq /*현재일련번호*/
     , bde.err_seq as errSeq /*에러일련번호*/
     , bde.start_dttm as startDttm /*시작일시*/
     , bde.err_cd as errCd /*에러코드*/
     , bde.err_msg_ctt as errMsgCtt /*에러메시지내용*/
  from bxm_deferred_exec bde
 inner join 
       bxm_deferred_main bdm
    on bde.deferred_id = bdm.deferred_id
<where>
  <if test="deferredId != null and deferredId != ''">
       upper(bde.deferred_id) like upper(#{deferredId, jdbcType=VARCHAR})||'%'
  </if>
  <if test="nodeNo != null and nodeNo != ''">
       and bde.node_no = #{nodeNo, jdbcType=NUMERIC}
  </if>
</where>
 order by bde.start_dttm desc
/* #### Original SQL ]] ################# */

        ) A 
    WHERE ROWNUM &lt;= ((#{pageNum}*#{pageCount})+1) 
    ) 
WHERE ROW__NUM &gt; (#{pageNum}-1)*#{pageCount}
</select>
<select id="selectListWithDeferredNameCount" resultType="java.lang.Integer">
select count(bde.deferred_id) as totalCount /*전체건수*/
  from bxm_deferred_exec bde
 inner join 
       bxm_deferred_main bdm
    on bde.deferred_id = bdm.deferred_id
<where>
  <if test="deferredId != null and deferredId != ''">
       upper(bde.deferred_id) like upper(concat(#{deferredId, jdbcType=VARCHAR},'%'))
  </if>
  <if test="nodeNo != null and nodeNo != ''">
       and bde.node_no = #{nodeNo, jdbcType=NUMERIC}
  </if>
</where>
</select>
</mapper>
